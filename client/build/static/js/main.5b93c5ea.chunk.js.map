{"version":3,"sources":["reducers/auth.js","context/UserContextProvider.js","constants.js","actions/http.js","components/molecules/LoginForm/index.js","actions/login.js","components/pages/loginPage.js","components/atoms/ProtectedRoute/index.js","components/atoms/adminRoute/index.js","components/atoms/showMessage/index.js","components/atoms/leave/index.js","components/atoms/bonus/index.js","components/atoms/payroll/index.js","components/molecules/EmployeeRequestMenu/index.js","components/molecules/UserInfoCard/index.js","components/atoms/Attendance/index.js","components/atoms/request/index.js","components/molecules/RequestContainer/index.js","components/pages/loadingPage.js","components/pages/errorPage.js","components/atoms/refreshIcon/index.js","components/pages/dashboard.js","components/molecules/AddEmployeeForm/options.js","components/molecules/PreviewEmployeeInfo/index.js","components/atoms/imageUploader/index.js","components/molecules/AddEmployeeForm/index.js","components/atoms/TextEditor/index.js","components/molecules/CreatePostMenu/index.js","components/pages/adminPage.js","components/atoms/post/index.js","components/molecules/PostsContainer/index.js","components/pages/discussion.js","components/pages/searchPage.js","components/templates/footer/index.js","components/pages/homePage.js","components/pages/aboutPage.js","components/atoms/todoListItem/index.js","components/molecules/ListContainer/index.js","components/atoms/listItemForm/index.js","components/molecules/KanbanBoard/index.js","components/pages/kanbanPage.js","components/pages/404Page.js","App.js","config/graphql.js","actions/logout.js","components/templates/navbar/index.js","index.js"],"names":["ACTIONS","AuthReducer","state","action","type","console","log","payload","localStorage","setItem","JSON","stringify","user","loading","removeItem","error","userData","parse","getItem","UserContext","createContext","UserContextProvider","_ref","children","dispatch","useReducer","_jsx","Provider","value","URL","dev","prod","use","USER_REQUESTS_TYPE","TodoItemStatus","REQUEST","async","path","data","method","setLoading","axios","concat","headers","withCredentials","e","response","Error","LoginForm","router","useHistory","useContext","setError","useState","details","setDetails","email","password","changeHandler","name","_jsxs","Container","Segment","inverted","Form","onSubmit","preventDefault","loginUser","loginData","message","login","replace","Input","fluid","label","placeholder","onChange","Button","Message","header","content","style","textDecoration","LoginPage","ProtectedRoute","component","Route","AdminRoute","isAdmin","alert","ShowMessage","success","_Fragment","negative","LeaveRequest","Date","setSuccess","textAlign","Calendar","className","val","returnValue","selectRange","toLocaleDateString","Field","control","TextArea","onClick","dates","start","end","startDate","getFullYear","getMonth","getDate","endDate","arr","dt","setDate","push","getDaysArray","Bonus","money","_ref2","amount","Payroll","EmployeeRequestMenu","activeItem","setActiveItem","handleItemClick","Header","attached","as","Menu","tabular","Item","active","absentDates","UserInfoCard","_state$user","_id","branch","department","dob","firstName","lastName","img","salary","position","showProfileButton","showDeleteButton","Image","rounded","bordered","src","ui","size","centered","Card","alt","Content","background","padding","Description","Meta","toString","extra","Icon","confirm","pushToUserProfile","AttendanceCalender","presentDates","showMarkAttendanceButton","date","tileClassName","view","absent","filter","d","length","RequestCard","employee","status","resolved_by","disabled","showDeleteOption","deleteMessage","setDeleteMessage","onClickHandler","color","cursor","floated","basic","avatar","RequestContainer","requests","requestsToShow","setRequestsToShow","useEffect","temp","req","block","Group","map","request","index","LoadingPage","Dimmer","Loader","ErrorPage","RefreshIcon","refetch","display","DashboardPage","USER_QUERY","gql","_templateObject","_taggedTemplateLiteral","useQuery","variables","titleCase","text","toLowerCase","charAt","toUpperCase","substr","split","height","genderOptions","key","jobOptions","positionOptions","branchOptions","PreviewEmployeeInfo","widths","readOnly","gender","Checkbox","checked","ImageUploaderComponent","selectedFile","setSelectedFile","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","toBase64","imgUpload","target","files","AddEmployeeForm","setMessage","show","activeMenu","setActiveMenu","handleMenuChange","requestData","Select","options","Label","_ref3","MyTextEditor","setHtml","RichTextEditor","PreviewPost","html","dangerouslySetInnerHTML","__html","CreatePostMenu","createEmptyValue","AdminPage","REQUESTS_QUERY","Post","post","htmlDiv","useRef","current","innerHTML","Feed","Event","Summary","created_by","ref","PostContainer","posts","DiscussionPage","POSTS_QUERY","margin","overflowX","GET_ALL_EMPLOYEES","SearchPage","sortBy","setSortBy","setValue","employees","setEmployees","allEmployee","setAllEmployee","compact","includeScore","keys","searchedResult","Fuse","search","r","item","Footer","PolicyCard","description","link","href","rel","HomePage","AboutPage","props","match","params","id","ABOUT_USER_QUERY","TodoListItemButton","title","TodoListItem","showButtons","updateStatus","ListContainer","listItems","heading","icon","ListItemForm","section","setText","KanbanBoard","showForm","KANBAN_QUERY","kanbanItems","TodoItems","DoingItems","DoneItems","KanbanPage","_state$user2","NotFoundPage","Link","to","App","Switch","exact","client","ApolloClient","uri","cache","InMemoryCache","loggedInLinks","Navbar","setIcon","mobileNav","navLinks","clickHandler","logout","idx","hideLinks","classList","toggle","ReactDOM","render","ApolloProvider","Router","document","getElementById"],"mappings":"sZACO,MAAMA,EACJ,QADIA,EAEH,SAFGA,EAGF,UAHEA,EAIG,eAGHC,EAAcA,CAACC,EAAOC,KACjC,OAAQA,EAAOC,MACb,KAAKJ,EAGH,OAFAK,QAAQC,IAAIH,EAAOI,SACnBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUR,EAAOI,QAAQK,OACpD,IAAKT,EAAOI,QAASM,SAAS,GACvC,KAAKb,EAEH,OADAQ,aAAaM,WAAW,QACjB,CAAEF,KAAM,KAAMG,MAAO,KAAMF,SAAS,GAC7C,KAAKb,EACH,MAAO,CAAEY,KAAM,KAAMG,MAAO,KAAMF,SAAS,GAC7C,KAAKb,EACH,MAAMgB,EAAWN,KAAKO,MAAMT,aAAaU,QAAQ,SAEjD,OADAb,QAAQC,IAAIE,aAAaU,QAAQ,QAASF,GACnC,CAAEJ,KAAMI,EAAUD,MAAO,KAAMF,SAAS,GACjD,QACE,OAAOX,EACX,E,WCtBK,MAAMiB,EAAcC,0BAoBZC,MAlBaC,IAAmB,IAAlB,SAAEC,GAAUD,EACvC,MAAOpB,EAAOsB,GAAYC,qBAAWxB,EAAa,CAChDW,KAAMF,KAAKO,MAAMT,aAAaU,QAAQ,SACtCH,MAAO,KACPF,SAAS,IAEX,OACEa,cAACP,EAAYQ,SAAQ,CACnBC,MAAO,CACL1B,QACAsB,YACAD,SAEDA,GACoB,E,kBCnB3B,MACaM,EAAM,CACjBC,IAAK,wBACLC,KAAM,kCACNC,IAA6C,mCAGlCC,EACJ,QADIA,EAEF,UAFEA,EAGJ,QAGIC,EACJ,OADIA,EAEJ,QAFIA,EAGL,OCdKC,EAAUC,UAA+C,IAAxC,KAAEC,EAAI,KAAEC,EAAI,OAAEC,EAAM,WAAEC,GAAYlB,EAC9D,IACMkB,GAAYA,GAAW,GAS3B,aARuBC,IAAM,GAADC,OAAIb,EAAIG,IAAMK,GAAQ,CAChDE,SACAD,OACAK,QAAS,CACP,eAAgB,oBAElBC,iBAAiB,KAEHN,IAClB,CAAE,MAAOO,GAGP,MAFAxC,QAAQC,IAAIuC,GACZxC,QAAQC,IAAIuC,EAAEC,UACR,IAAIC,MAAMF,EAAEC,SAASR,KAC7B,CAAC,QACKE,GAAYA,GAAW,EAC7B,GC8DaQ,MA5EGA,KAChB,MAAMC,EAASC,eACT,MAAEhD,EAAK,SAAEsB,GAAa2B,qBAAWhC,IAChCJ,EAAOqC,GAAYC,mBAAS,KAC5BxC,EAAS2B,GAAca,oBAAS,IAEhCC,EAASC,GAAcF,mBAAS,CACrCG,MAAO,GACPC,SAAU,KAENC,EAAgBA,CAACb,EAACvB,KAAA,IAAE,KAAEqC,EAAI,MAAE/B,GAAON,EAAA,OACvCiC,EAAW,IAAKD,EAAS,CAACK,GAAO/B,GAAQ,EAe3C,OACEgC,eAACC,IAAS,CAAAtC,SAAA,CACRqC,eAACE,IAAO,CAACC,UAAQ,EAAAxC,SAAA,CACfqC,eAACI,IAAI,CAACD,UAAQ,EAACE,SAhBC7B,UACpBS,EAAEqB,iBACF1B,GAAW,GACX,MAAM2B,OCnBW/B,OAAOZ,EAAU8B,KACpC,IACE9B,EAAS,CAAEpB,KAAMJ,IACjB,MAAMoE,QAAkBjC,EAAQ,CAC9BE,KAAM,aACNE,OAAQ,OACRD,KAAMgB,IAGR,OADA9B,EAAS,CAAEpB,KAAMJ,EAAeO,QAAS6D,KAClC,CACT,CAAE,MAAOvB,GAMP,OALAxC,QAAQC,IAAIuC,GACZrB,EAAS,CACPpB,KAAMJ,EACNO,QAAS,CAAEK,KAAM,KAAMG,MAAO8B,EAAEwB,YAE3B,CACT,GDE0BC,CAAM9C,EAAU8B,GAExC,GADAd,GAAW,GACP2B,EACF,OAAOlB,EAAOsB,QAAQ,cAEtBnB,EAASlD,EAAMa,OACfV,QAAQC,IAAIS,EACd,EAM4CF,QAASX,EAAMW,QAAQU,SAAA,CAC7DG,cAACsC,IAAKQ,MAAK,CACTC,OAAK,EACLC,MAAM,QACNC,YAAY,QACZhB,KAAK,QACLvD,KAAK,QACLwB,MAAO0B,EAAQE,MACfoB,SAAUlB,IAEZhC,cAACsC,IAAKQ,MAAK,CACTC,OAAK,EACLC,MAAM,WACNC,YAAY,WACZhB,KAAK,WACLvD,KAAK,WACLwB,MAAO0B,EAAQG,SACfmB,SAAUlB,IAEZhC,cAACmD,IAAM,CAAChE,QAASA,EAAST,KAAK,SAAQmB,SAAC,cAIzCrB,EAAMa,MACLW,cAACoD,IAAO,CACN/D,QAAOb,EAAMa,MACbgE,OAAO,QACPC,QAAS9E,EAAMa,QAEf,QAGN6C,eAACE,IAAO,CAAAvC,SAAA,CACNG,cAAA,MAAIuD,MAAO,CAACC,eAAe,aAAa3D,SAAC,4BACzCG,cAAA,SACAA,cAAA,MAAAH,SAAI,0BACJG,cAAA,MAAAH,SAAI,kCACJG,cAAA,MAAAH,SAAI,oBACJG,cAAA,SACAA,cAAA,MAAAH,SAAI,eACJG,cAAA,MAAAH,SAAI,sCACJG,cAAA,MAAAH,SAAI,6BAEI,EEpED4D,MARGA,IAEdzD,cAAA,OAAAH,SACEG,cAACsB,EAAS,MCSDoC,MAVQ9D,IAA0B,IAAzB,KAAEe,EAAI,UAAEgD,GAAW/D,EACzC,MAAM2B,EAASC,eACT,MAAEhD,GAAUiD,qBAAWhC,GAC7B,OAAKjB,EAAMU,MAAQV,EAAMa,OACvBkC,EAAOsB,QAAQ,UACR,MAEF7C,cAAC4D,IAAK,CAACjD,KAAMA,EAAMgD,UAAWA,GAAa,ECUrCE,MAjBIjE,IAA0B,IAAzB,KAAEe,EAAI,UAAEgD,GAAW/D,EACrC,MAAM2B,EAASC,eACT,MAAEhD,GAAUiD,qBAAWhC,GAC7Bd,QAAQC,IAAIJ,GACZ,MAAM,KAAEU,EAAI,MAAEG,GAAUb,EACxB,OAAKU,GAAQG,GACXkC,EAAOsB,QAAQ,UACR,MAEJ3D,EAAK4E,QAKH9D,cAAC4D,IAAK,CAACjD,KAAMA,EAAMgD,UAAWA,KAJnCI,MAAM,mCACNxC,EAAOsB,QAAQ,cACR,KAEyC,E,mDCCrCmB,MAjBKpE,IAAuB,IAAtB,MAACP,EAAK,QAAE4E,GAAQrE,EACnC,OACEsC,eAAAgC,WAAA,CAAArE,SAAA,CACGR,EACCW,cAACoD,IAAO,CAACe,UAAQ,EAAAtE,SACfG,cAAA,KAAAH,SAAIR,MAEN,KACD4E,EACCjE,cAACoD,IAAO,CAACa,SAAO,EAAApE,SACdG,cAAA,KAAAH,SAAIoE,MAEN,OACA,EC8FOG,MAhFMA,KACnB,MAAOxC,EAASC,GAAcF,mBAAS,CACrCzB,MAAO,IAAImE,KACX1B,QAAS,MAEJtD,EAAOqC,GAAYC,mBAAS,OAC5BsC,EAASK,GAAc3C,mBAAS,OAChCxC,EAAS2B,GAAca,oBAAS,GAmCvC,OACEO,eAACC,IAAS,CAACoC,UAAU,OAAM1E,SAAA,CACzBG,cAACwE,IAAQ,CACPC,UAAU,WACVvB,SAAWwB,IACT/F,QAAQC,IAAI8F,GACZ7C,EAAW,IAAKD,EAAS1B,MAAOwE,GAAM,EAExCxE,MAAO0B,EAAQ1B,MACfyE,YAAa,QACbC,aAAa,IAEdhD,EAAQ1B,MAAM,IAAM0B,EAAQ1B,MAAM,GACjCgC,eAAA,MAAArC,SAAA,CAAI,cACU+B,EAAQ1B,MAAM,GAAG2E,qBAAqB,MAAI,IACrDjD,EAAQ1B,MAAM,GAAG2E,qBAAqB,aAEvC,KACJ7E,cAACsC,IAAI,CAAAzC,SACHG,cAACsC,IAAKwC,MAAK,CACTC,QAASC,IACT9E,MAAO0B,EAAQe,QACfO,SAAUA,CAAC/B,EAACvB,KAAA,IAAE,MAAEM,GAAON,EAAA,OACrBiC,EAAW,IAAKD,EAASe,QAASzC,GAAQ,EAE5C8C,MAAM,oBACNC,YAAY,iDAGhBjD,cAAA,SACAA,cAACmD,IAAM,CAAChE,QAASA,EAAS8F,QA/DPvE,UACrBS,EAAEqB,iBACF,IACE,IAAKZ,EAAQ1B,MAAM,KAAO0B,EAAQ1B,MAAM,GAEtC,YADAwB,EAAS,qBAGX,MACMd,EAAO,CACXsE,MAvCW,SAAUC,EAAOC,GAClC,MAAMC,EAAY,IAAIhB,KACpBc,EAAMG,cACNH,EAAMI,WACNJ,EAAMK,UAAY,GAEdC,EAAU,IAAIpB,KAClBe,EAAIE,cACJF,EAAIG,WACJH,EAAII,UAAY,GAElB,IACE,IAAIE,EAAM,GAAIC,EAAK,IAAItB,KAAKgB,GAC5BM,GAAMF,EACNE,EAAGC,QAAQD,EAAGH,UAAY,GAE1BE,EAAIG,KAAK,IAAIxB,KAAKsB,IAEpB,OAAOD,CACT,CAkBoBI,CAAalE,EAAQ1B,MAAM,GAAI0B,EAAQ1B,MAAM,IAGzDyC,QAASf,EAAQe,SAEbvB,QAAiBX,EAAQ,CAC7BE,KAAM,eACNE,OAAQ,OACRD,KAAM,CACJlC,KAAM6B,EACNK,QAEFE,eAKF,OAHAnC,QAAQC,IAAIwC,GACZkD,EAAW,kCACX5C,EAAS,KAEX,CAAE,MAAOP,GAIP,OAHAxC,QAAQC,IAAIuC,EAAEwB,SACdjB,EAASP,EAAEwB,cACX2B,EAAW,KAEb,GAiCoDzE,SAAC,kBAGpDG,cAACgE,EAAW,CAAC3E,MAAOA,EAAO4E,QAASA,MACzB,E,OChCD8B,MAlEDA,KACZ,MAAOnE,EAASC,GAAcF,mBAAS,CACrCqE,MAAO,GACPrD,QAAS,MAEJtD,EAAOqC,GAAYC,mBAAS,OAC5BsC,EAASK,GAAc3C,mBAAS,OAChCxC,EAAS2B,GAAca,oBAAS,GA2BvC,OACEO,eAACC,IAAS,CAAAtC,SAAA,CACRqC,eAACI,IAAI,CAAAzC,SAAA,CACHG,cAACsC,IAAKQ,MAAK,CACT5C,MAAO0B,EAAQoE,MACf9C,SAAUA,CAAC/B,EAACvB,KAAA,IAAE,MAAEM,GAAON,EAAA,OAAKiC,EAAW,IAAKD,EAASoE,MAAO9F,GAAQ,EACpE8C,MAAM,eACNC,YAAY,oBACZvE,KAAK,WAEPsB,cAACsC,IAAKwC,MAAK,CACTC,QAASC,IACT9E,MAAO0B,EAAQe,QACfO,SAAUA,CAAC/B,EAAC8E,KAAA,IAAE,MAAE/F,GAAO+F,EAAA,OACrBpE,EAAW,IAAKD,EAASe,QAASzC,GAAQ,EAE5C8C,MAAM,8BACNC,YAAY,6CAGhBjD,cAACmD,IAAM,CACLhE,QAASA,EACT8F,QA/CiBvE,UACrBS,EAAEqB,iBACF,IACE,MAAM5B,EAAO,CACXsF,OAAQtE,EAAQoE,MAChBrD,QAASf,EAAQe,SAEbvB,QAAiBX,EAAQ,CAC7BE,KAAM,eACNE,OAAQ,OACRD,KAAM,CACJlC,KAAM6B,EACNK,QAEFE,eAIF,OAFAnC,QAAQC,IAAIwC,QACZkD,EAAW,4BAEb,CAAE,MAAOnD,GAGP,OAFAxC,QAAQC,IAAIuC,EAAEwB,cACdjB,EAASP,EAAEwB,QAEb,GAyBI8B,UAAU,cAAa5E,SACxB,kBAGDG,cAACgE,EAAW,CAAC3E,MAAOA,EAAO4E,QAASA,MAC1B,ECNDkC,MAzDCA,KACd,MAAOvE,EAASC,GAAcF,mBAAS,CACrCgB,QAAS,MAEJtD,EAAOqC,GAAYC,mBAAS,OAC5BsC,EAASK,GAAc3C,mBAAS,OAChCxC,EAAS2B,GAAca,oBAAS,GA0BvC,OACEO,eAACC,IAAS,CAAAtC,SAAA,CACRG,cAACsC,IAAI,CAAAzC,SACHG,cAACsC,IAAKwC,MAAK,CACTC,QAASC,IACT9E,MAAO0B,EAAQe,QACfO,SAAUA,CAAC/B,EAACvB,KAAA,IAAE,MAAEM,GAAON,EAAA,OACrBiC,EAAW,IAAKD,EAASe,QAASzC,GAAQ,EAE5C8C,MAAM,UACNC,YAAY,wCAGhBjD,cAACmD,IAAM,CACLhE,QAASA,EACT8F,QAvCiBvE,UACrBS,EAAEqB,iBACF,IACE,MAAM5B,EAAO,CACX+B,QAASf,EAAQe,SAEbvB,QAAiBX,EAAQ,CAC7BE,KAAM,eACNE,OAAQ,OACRD,KAAM,CACJlC,KAAM6B,EACNK,QAEFE,eAIF,OAFAnC,QAAQC,IAAIwC,QACZkD,EAAW,4BAEb,CAAE,MAAOnD,GAGP,OAFAxC,QAAQC,IAAIuC,EAAEwB,cACdjB,EAASP,EAAEwB,QAEb,GAkBI8B,UAAU,cAAa5E,SACxB,oBAGDG,cAACgE,EAAW,CAAC3E,MAAOA,EAAO4E,QAASA,MAC1B,E,OCZDmC,MAxCaA,KAC1B,MAAOC,EAAYC,GAAiB3E,mBAAS,SACvC4E,EAAkBA,CAACpF,EAACvB,KAAA,IAAE,KAAEqC,GAAMrC,EAAA,OAAK0G,EAAcrE,EAAK,EAC5D,OACEC,eAAA,OAAKuC,UAAU,oBAAmB5E,SAAA,CAChCG,cAACwG,IAAM,CAACC,SAAS,MAAMC,GAAG,KAAKnC,UAAU,OAAM1E,SAAC,sBAGhDqC,eAACyE,IAAI,CAACF,SAAS,MAAMG,SAAO,EAAA/G,SAAA,CAC1BG,cAAC2G,IAAKE,KAAI,CACR5E,KAAK,QACL6E,OAAuB,UAAfT,EACRpB,QAASsB,IAEXvG,cAAC2G,IAAKE,KAAI,CACR5E,KAAK,UACL6E,OAAuB,YAAfT,EACRpB,QAASsB,IAEXvG,cAAC2G,IAAKE,KAAI,CACR5E,KAAK,QACL6E,OAAuB,UAAfT,EACRpB,QAASsB,OAGbvG,cAACoC,IAAO,CAACqE,SAAS,SAAQ5G,SACR,UAAfwG,EACCrG,cAAC+F,EAAK,IACW,UAAfM,EACFrG,cAACoE,EAAY,CACX2C,YAAa,CAAC,aAAc,aAAc,gBAG5C/G,cAACmG,EAAO,QAGR,E,iCCqEKa,MAxGMpH,IAed,IAADqH,EAAA,IAfgB,IACpBC,EAAG,OACHC,EAAM,WACNC,EAAU,IACVC,EAAG,MACHvF,EAAK,UACLwF,EAAS,SACTC,EAAQ,IACRC,EAAG,OACHC,EAAM,SACNC,EAAQ,MACR3E,EAAK,kBACL4E,GAAoB,EAAK,iBACzBC,GAAmB,EAAK,QACxB9D,GAAU,GACXlE,EACC,MAAOP,EAAOqC,GAAYC,mBAAS,OAC5BsC,EAASK,GAAc3C,mBAAS,OAChCxC,EAAS2B,GAAca,oBAAS,GAEjCJ,EAASC,eA6BT,MAAChD,GAASiD,qBAAWhC,GAC3B,OACEyC,eAAAgC,WAAA,CAAArE,SAAA,CACGkD,GACC/C,cAAA,OAAAH,SACEG,cAAC6H,IAAK,CACJC,SAAO,EACPC,UAAQ,EACRC,IAAKR,EACLS,IAAI,EACJC,KAAK,SACLC,UAAQ,MAIdjG,eAACkG,IAAI,CAACrF,MAAOA,EAAMlD,SAAA,EACfkD,GAAS/C,cAAA,OAAKgI,IAAKR,EAAK/C,UAAU,gBAAgB4D,IAAI,SACxDnG,eAACkG,IAAKE,QAAO,CAAC7D,UAAU,UAAS5E,SAAA,CAC/BG,cAACoI,IAAK5B,OAAM,CAAA3G,SACVqC,eAAA,MAAArC,SAAA,CACGyH,EAAU,IAAEC,EAAS,IAAEzD,GAAW9D,cAAA,MAAIuD,MAAO,CAACgF,WAAW,iBAAkBC,QAAQ,YAAY3I,SAAC,eAGrGqC,eAACkG,IAAKK,YAAW,CAAA5I,SAAA,CAAC,gBACHG,cAAA,QAAMyE,UAAU,YAAW5E,SAAEqH,OAE5ChF,eAACkG,IAAKM,KAAI,CAAA7I,SAAA,CAAC,kBAAgBwH,EAAIsB,cAC/BzG,eAACkG,IAAKK,YAAW,CAAA5I,SAAA,CAAC,gBACHG,cAAA,QAAMyE,UAAU,YAAW5E,SAAEuH,OAE5ClF,eAACkG,IAAKK,YAAW,CAAA5I,SAAA,CAAC,cACLG,cAAA,QAAMyE,UAAU,YAAW5E,SAAE6H,OAE1CxF,eAACkG,IAAKK,YAAW,CAAA5I,SAAA,CAAC,YACPG,cAAA,QAAMyE,UAAU,YAAW5E,SAAEsH,OAExCjF,eAACkG,IAAKK,YAAW,CAAA5I,SAAA,CAAC,YACPqC,eAAA,QAAMuC,UAAU,YAAW5E,SAAA,CAAC,IAAE4H,WAG3CvF,eAACkG,IAAKE,QAAO,CAACM,OAAK,EAAA/I,SAAA,CACjBG,cAAC6I,IAAI,CAAC5G,KAAK,SACVH,KAGK,OAALtD,QAAK,IAALA,GAAW,QAANyI,EAALzI,EAAOU,YAAI,IAAA+H,GAAXA,EAAanD,SAAW8D,EAAmB1F,eAACkG,IAAKE,QAAO,CAACM,OAAK,EAACrE,UAAU,QAAO1E,SAAA,CAAC,kBACjEG,cAAC6I,IAAI,CAAC5G,KAAK,QAAQgD,QAtEtBvE,UAEpB,GAAIoI,QAAQ,mCAAD9H,OAAoCsG,IAI/C,IACE,MAAMlG,QAAiBX,EAAQ,CAC7BE,KAAK,gBACLE,OAAO,SACPD,KAAK,CACHsG,OAEFpG,eAEFwD,EAAWlD,GACXM,EAAS,KACX,CAAC,MAAMP,GACLmD,EAAW,MACX5C,EAASP,EAAEwB,QACb,CAAC,QACC,MACF,MAnBEhE,QAAQC,IAAI,kBAmBd,EAgDkEO,QAASA,OACnD,KAClBa,cAACgE,EAAW,CAAC3E,MAAOA,EAAO4E,QAASA,IACnC0D,GAAqB3H,cAACmD,IAAM,CAAC8B,QA5EZ8D,KACxBxH,EAAOsE,KAAK,UAAD7E,OAAWkG,GAAM,EA2EmCrH,SAAC,sBAE7D,E,OC5BQmJ,MAzEYpJ,IAAmE,IAAlE,aAAEqJ,EAAY,YAAElC,EAAW,yBAAEmC,GAAyB,GAAMtJ,EACtF,MAAOqE,EAASK,GAAc3C,mBAAS,OAChCtC,EAAOqC,GAAYC,mBAAS,OAC5BxC,EAAS2B,GAAca,oBAAS,GACjCwH,EAAO,IAAI9E,MACf,IAAIA,MAAOiB,eACX,IAAIjB,MAAOkB,YACX,IAAIlB,MAAOmB,UAAY,GA6CzB,OACEtD,eAACC,IAAS,CAACoC,UAAU,SAASxB,OAAK,EAAAlD,SAAA,CACjCG,cAACwG,IAAM,CAACE,GAAG,KAAKD,SAAS,MAAMlC,UAAU,OAAM1E,SAAC,wBAGhDqC,eAAA,MAAArC,SAAA,CAAI,aAAU,IAAIwE,MAAOQ,wBACzB7E,cAACwE,IAAQ,CACPtE,MAAO,IAAImE,KACXI,UAAU,WACVE,YAAY,QACZC,aAAa,EACbwE,cAtDN,SAAsBnD,GAAkB,IAAjB,KAAEkD,EAAI,KAAEE,GAAMpD,EAEnC,GAAa,UAAToD,EAAkB,CAEpB,MAAMC,EAASvC,EACXA,EAAYwC,QAAQC,GAAMA,IAAML,EAAKtE,uBACrC,GAIJ,IAHgBoE,EACZA,EAAaM,QAAQC,GAAMA,IAAML,EAAKtE,uBACtC,IACQ4E,OACV,MAAO,UAET,GAAIH,EAAOG,OACT,MAAO,QAEX,CACF,IAuCKP,GAA4BlJ,cAACmD,IAAM,CAAChE,QAASA,EAAS8F,QAtCpCvE,UACrBS,EAAEqB,iBACF,IACE,MAAM5B,EAAO,CACXuI,KAAMA,EACNzK,KAAM,WAERC,QAAQC,IAAIgC,GACZ,MAAMQ,QAAiBX,EAAQ,CAC7BE,KAAM,kBACNE,OAAQ,OACRD,OACAE,eAKF,OAHAnC,QAAQC,IAAIwC,GACZkD,EAAW,gEACX5C,EAAS,KAEX,CAAE,MAAOP,GAIP,OAHAxC,QAAQC,IAAIuC,EAAEwB,SACdjB,EAASP,EAAEwB,cACX2B,EAAW,KAEb,GAeiFzE,SAAC,4BAGjFG,cAACgE,EAAW,CAAC3E,MAAOA,EAAO4E,QAASA,MACzB,E,kBCoEDyF,MA3IK9J,IASb,IATc,IACnBsH,EAAG,SACHyC,EAAQ,KACRjL,EAAI,KACJkC,EAAI,OACJgJ,EAAM,YACNC,EAAW,SACXC,GAAW,EAAK,iBAChBC,GAAmB,GACpBnK,EACC,MAAOT,EAAS2B,GAAca,oBAAS,IAChCtC,EAAOqC,GAAYC,mBAAS,OAC5BsC,EAASK,GAAc3C,mBAAS,OAChCqI,EAAeC,GAAoBtI,mBAAS,MAE7CuI,EAAiBxJ,MAAOS,EAAC8E,KAAgB,IAAd,KAAEhE,GAAMgE,EACvC9E,EAAEqB,iBACF,IACE,MAAMpB,QAAiBX,EAAQ,CAC7BE,KAAM,eACNE,OAAQ,QACRD,KAAM,CACJsG,MACA0C,OAAQ3H,GAEVnB,eAEFY,EAAS,MACT/C,QAAQC,IAAIwC,GACZkD,EAAWlD,EACb,CAAE,MAAOD,GACPxC,QAAQC,IAAIuC,EAAEwB,SACdjB,EAASP,EAAEwB,SACX2B,EAAW,KACb,CAAC,QACC,MACF,GAsBF,OACEpC,eAACkG,IAAI,CAAC+B,MAAM,OAAMtK,SAAA,CACZkK,EACE7H,eAAAgC,WAAA,CAAArE,SAAA,CAEEmK,EACAhK,cAACoD,IAAO,CAAAvD,SAAEmK,IACV,KAEF9H,eAACkG,IAAKE,QAAO,CAACM,OAAK,EAACrE,UAAU,QAAO1E,SAAA,CAAC,sBACjBG,cAAC6I,IAAI,CAAC5G,KAAK,QAAQ9C,QAASA,EAASoE,MAAO,CAAC6G,OAAO,WAAYnF,QA7BlEvE,UAC3B,IACE,MAAMU,QAAiBX,EAAQ,CAC7BE,KAAM,eACNE,OAAQ,SACRD,KAAM,CACJsG,OAEFpG,eAEFnC,QAAQC,IAAIwC,GACZ6I,EAAiB7I,EACnB,CAAE,MAAOD,GACPxC,QAAQC,IAAIuC,EAAEwB,SACdsH,EAAiB9I,EAAEwB,QACrB,CAAC,QACC,MACF,WAgBO,KAELT,eAACkG,IAAKE,QAAO,CAAAzI,SAAA,CACXG,cAAC6H,IAAK,CAACwC,QAAQ,QAAQnC,KAAK,OAAOF,IAAa,OAAR2B,QAAQ,IAARA,OAAQ,EAARA,EAAUnC,MAClDxH,cAACoI,IAAK5B,OAAM,CAAA3G,SAAU,OAAR8J,QAAQ,IAARA,OAAQ,EAARA,EAAU1H,OACxBC,eAACkG,IAAKM,KAAI,CAAA7I,SAAA,CAAEnB,EAAK,cACjBwD,eAACkG,IAAKK,YAAW,CAAA5I,SAAA,CACfqC,eAAA,UAAArC,SAAA,CACGnB,IAAS6B,GAAwB,6BAAAS,OACHJ,EAAKsE,MAAMG,UAAS,QAAArE,OAAOJ,EAAKsE,MAAMO,SACpE/G,IAAS6B,GAAwB,2BAAAS,OACLJ,EAAKsF,QACjCxH,IAAS6B,GAA0B,4BAEtCP,cAAA,SACCY,EAAK+B,cAGE,YAAXiH,EACC1H,eAACkG,IAAKE,QAAO,CAACM,OAAK,EAAA/I,SAAA,CACjBqC,eAAA,OAAKuC,UAAU,iBAAgB5E,SAAA,CAC7BG,cAACmD,IAAM,CACLmH,OAAK,EACLH,MAAM,QACNlF,QAASiF,EACTjI,KAAK,WACL6H,SAAUA,EAASjK,SACpB,YAGDG,cAACmD,IAAM,CACLmH,OAAK,EACLH,MAAM,MACNlF,QAASiF,EACTjI,KAAK,WACL6H,SAAUA,EAASjK,SACpB,eAKFR,EACCW,cAACoD,IAAO,CAAC/D,OAAK,EAAC6I,KAAK,OAAMrI,SACxBG,cAAA,KAAAH,SAAIR,MAEJ,KACH4E,EACCjE,cAACoD,IAAO,CAACa,SAAO,EAACiE,KAAK,OAAMrI,SAC1BG,cAAA,KAAAH,SAAIoE,MAEJ,QAGN/B,eAACkG,IAAKE,QAAO,CAACM,OAAK,EAAA/I,SAAA,CACjBG,cAAC6H,IAAK,CAACwC,QAAQ,QAAQnC,KAAK,OAAOqC,QAAM,EAACvC,IAAK6B,EAAYrC,MAC3DtF,eAAA,KAAArC,SAAA,CAAG,eAAagK,EAAY5H,QAE5BjC,cAACoD,IAAO,CAAC+G,MAAkB,aAAXP,EAAwB,QAAU,MAAO1B,KAAK,OAAMrI,SAClEqC,eAAA,KAAArC,SAAA,CAAG,oBAAkB+J,EAAO,cAK7B,ECnFIY,MArDU5K,IAA+D,IAA9D,SAAE6K,EAAQ,SAAEX,GAAW,EAAK,iBAAEC,GAAmB,GAAOnK,EAChF,MAAOyG,EAAYC,GAAiB3E,mBAAS,YACtC+I,EAAgBC,GAAqBhJ,mBAAS,IACrDiJ,qBAAU,KACR,MAAMC,EAAOJ,EAASlB,QAAQuB,GAAQA,EAAIlB,SAAWvD,IACrDsE,EAAkBE,EAAK,GACtB,CAACxE,EAAYoE,IAChB,MAAMlE,EAAkBA,CAACpF,EAAC8E,KAAA,IAAE,KAAEhE,GAAMgE,EAAA,OAAKK,EAAcrE,EAAK,EAC5D,OACEC,eAACC,IAAS,CAAAtC,SAAA,CACRG,cAACwG,IAAM,CAACE,GAAG,KAAKqE,OAAK,EAAAlL,SAAC,4BAGtBqC,eAACyE,IAAI,CAACF,SAAS,MAAMG,SAAO,EAAA/G,SAAA,CAC1BG,cAAC2G,IAAKE,KAAI,CACR5E,KAAK,UACL6E,OAAuB,YAAfT,EACRpB,QAASsB,IAEXvG,cAAC2G,IAAKE,KAAI,CACR5E,KAAK,WACL6E,OAAuB,aAAfT,EACRpB,QAASsB,IAEXvG,cAAC2G,IAAKE,KAAI,CACR5E,KAAK,WACL6E,OAAuB,aAAfT,EACRpB,QAASsB,OAGbvG,cAACoC,IAAO,CAACqE,SAAS,SAAQ5G,SACxBG,cAACoI,IAAK4C,MAAK,CAAC7C,UAAQ,EAAAtI,SACjB6K,EAAeO,KAAI,CAACC,EAASC,IAE1BnL,cAAC0J,EAAW,CAEVxC,IAAKgE,EAAQhE,IACb0C,OAAQsB,EAAQtB,OAChBD,SAAUuB,EAAQvB,SAClB/I,KAAMsK,EAAQtK,KACdlC,KAAMwM,EAAQxM,KACdmL,YAAaqB,EAAQrB,YACrBC,SAAUA,EACVC,iBAAkBA,GARboB,WAcL,E,mBC3CDC,OARKA,IAEhBpL,cAACqL,IAAM,CAACvE,QAAM,EAAAjH,SACZG,cAACsL,KAAM,CAACpD,KAAK,QAAOrI,SAAC,cCMZ0L,OATG3L,IAAc,IAAb,MAACP,GAAMO,EAExB,OADAjB,QAAQC,IAAIS,GAEVW,cAACqL,IAAM,CAACvE,QAAM,EAAAjH,SACZG,cAAA,KAAAH,SAAG,yBACI,ECGE2L,I,GAAAA,GATK5L,IAAgB,IAAf,QAAC6L,GAAQ7L,EAC5B,OACEsC,eAAA,OAAK+C,QAASA,IAAMwG,IAAWlI,MAAO,CAAC6G,OAAO,UAAWsB,QAAQ,UAAU7L,SAAA,CACzEG,cAAC6I,IAAI,CAAC5G,KAAK,UAAUkI,MAAM,SAAS,YAEhC,EC2GKwB,OArGOA,KACpB,MAAM,MAAEnN,GAAUiD,qBAAWhC,IACvB,IACJyH,EAAG,OACHC,EAAM,WACNC,EAAU,IACVC,EAAG,MACHvF,EAAK,UACLwF,EAAS,SACTC,EAAQ,IACRC,EAAG,SACHE,EAAQ,OACRD,GACEjJ,EAAMU,KAEJ0M,EAAaC,YAAGC,QAAAC,YAAA,ujBAkChB,QAAE5M,EAAO,MAAEE,EAAK,KAAEuB,EAAI,QAAE6K,GAAYO,YAASJ,EAAY,CAC7DK,UAAW,CAAE/E,SAGf,GAAI/H,EACF,OAAOa,cAACoL,GAAW,IAErB,GAAI/L,EACF,OAAOW,cAACuL,GAAS,CAAClM,MAAOA,IAE3B,GAAIuB,EAAM,CACR,IAAI,SAAE6J,GAAa7J,GACf,YAAEmG,EAAW,aAAEkC,GAAiBrI,EAAK+I,SACzC5C,EAAcA,EAAYkE,KAAKzB,GAAM,IAAInF,KAAKmF,EAAEL,MAAMtE,uBACtDoE,EAAeA,EAAagC,KAAKzB,GAC/B,IAAInF,KAAKmF,EAAEL,MAAMtE,uBAEnBlG,QAAQC,IAAImI,EAAakC,EAC3B,CACA,MAAMiD,EAAaC,IACjB,IAAItB,EAAOsB,EAAKC,cAChB,OAAOvB,EAAKwB,OAAO,GAAGC,cAAgBzB,EAAK0B,OAAO,GAAGH,aAAa,EAEpE,OACElK,eAACC,IAAS,CAAAtC,SAAA,CACRG,cAACwL,GAAW,CAACC,QAASA,IACtBzL,cAACoC,IAAO,CAACmC,UAAU,SAAQ1E,SACzBG,cAACgH,EAAY,CACXjE,OAAO,EACPmE,IAAKA,EACLC,OAAQA,EACRC,WAAYA,EACZC,IAAKA,EAAImF,MAAM,KAAK,GACpB1K,MAAOA,EACPwF,UAAW4E,EAAU5E,GACrBC,SAAU2E,EAAU3E,GACpBC,IAAKA,EACLE,SAAUA,EACVD,OAAQA,MAGZzH,cAACgJ,EAAkB,CACjBjC,YAAaA,GAAe,GAC5BkC,aAAcA,GAAgB,KAEhCjJ,cAACoG,EAAmB,IACpBpG,cAACwK,EAAgB,CAACC,SAAUA,GAAY,GAAIX,UAAU,EAAMC,kBAAoB,IAChF/J,cAAA,OAAKuD,MAAO,CAAEkJ,OAAQ,YACZ,E,oBC7GT,MAAMC,GAAgB,CAC3B,CAAEC,IAAK,IAAKR,KAAM,OAAQjM,MAAO,QACjC,CAAEyM,IAAK,IAAKR,KAAM,SAAUjM,MAAO,UACnC,CAAEyM,IAAK,IAAKR,KAAM,QAASjM,MAAO,UAEvB0M,GAAa,CACxB,CAAED,IAAK,IAAKR,KAAM,mBAAoBjM,MAAO,oBAC7C,CAAEyM,IAAK,IAAKR,KAAM,wBAAyBjM,MAAO,yBAClD,CAAEyM,IAAK,IAAKR,KAAM,qBAAsBjM,MAAO,uBAEpC2M,GAAkB,CAC7B,CAAEF,IAAK,IAAKR,KAAM,SAAUjM,MAAO,UACnC,CAAEyM,IAAK,IAAKR,KAAM,mBAAoBjM,MAAO,oBAC7C,CAAEyM,IAAK,IAAKR,KAAM,UAAWjM,MAAO,YAEzB4M,GAAgB,CAC3B,CAAEH,IAAK,IAAKR,KAAM,WAAYjM,MAAO,YACrC,CAAEyM,IAAK,IAAKR,KAAM,QAASjM,MAAO,SAClC,CAAEyM,IAAK,IAAKR,KAAM,QAASjM,MAAO,UC+BrB6M,OA/CanN,IAAkB,IAAjB,QAAEgC,GAAShC,EACtC,OACEsC,eAACE,IAAO,CAACqE,SAAS,SAASpE,UAAQ,EAACoC,UAAU,iBAAgB5E,SAAA,CAC5DG,cAAC6H,IAAK,CAACG,IAAKpG,EAAQ4F,IAAKU,KAAK,SAASC,UAAQ,IAC/CjG,eAACI,IAAI,CAACD,UAAQ,EAACoC,UAAU,iBAAgB5E,SAAA,CACvCqC,eAACI,IAAK0I,MAAK,CAACgC,OAAO,QAAOnN,SAAA,CACxBG,cAACsC,IAAKQ,MAAK,CACTC,OAAK,EACLC,MAAM,aACNiK,UAAQ,EACR/M,MAAO0B,EAAQ0F,YAEjBtH,cAACsC,IAAKQ,MAAK,CACTC,OAAK,EACLC,MAAM,YACNiK,UAAQ,EACR/M,MAAO0B,EAAQ2F,WAEjBvH,cAACsC,IAAKQ,MAAK,CAACC,OAAK,EAACC,MAAM,SAASiK,UAAQ,EAAC/M,MAAO0B,EAAQsL,YAE3DhL,eAACI,IAAK0I,MAAK,CAACgC,OAAO,QAAOnN,SAAA,CACxBG,cAACsC,IAAKQ,MAAK,CACTC,OAAK,EACLC,MAAM,aACNiK,UAAQ,EACR/M,MAAO0B,EAAQwF,aAEjBpH,cAACsC,IAAKQ,MAAK,CACTC,OAAK,EACLC,MAAM,aACNiK,UAAQ,EACR/M,MAAO0B,EAAQ8F,cAGnBxF,eAACI,IAAK0I,MAAK,CAACgC,OAAO,QAAOnN,SAAA,CACxBG,cAACsC,IAAKQ,MAAK,CAACC,OAAK,EAACC,MAAM,SAASiK,UAAQ,EAAC/M,MAAO0B,EAAQuF,SACzDnH,cAACsC,IAAKQ,MAAK,CAACC,OAAK,EAACC,MAAM,QAAQiK,UAAQ,EAAC/M,MAAO0B,EAAQE,WAE1DI,eAACI,IAAK0I,MAAK,CAACgC,OAAO,QAAOnN,SAAA,CACxBG,cAACsC,IAAKQ,MAAK,CAACE,MAAM,gBAAgB9C,MAAO0B,EAAQyF,IAAK4F,UAAQ,IAC9DjN,cAACsC,IAAKQ,MAAK,CAACE,MAAM,SAAS9C,MAAO0B,EAAQ6F,OAAQwF,UAAQ,OAE5DjN,cAACsC,IAAK6K,SAAQ,CAACnK,MAAM,WAAWoK,QAASxL,EAAQkC,eAE3C,E,OCICuJ,OAtCgBzN,IAA8B,IAA7B,QAAEgC,EAAO,WAAEC,GAAYjC,EACrD,MAAO0N,EAAcC,GAAmB5L,mBAAS,OAC1CxC,EAAS2B,GAAca,oBAAS,GAgBvC,OACEO,eAACE,IAAO,CAACqE,SAAS,SAASpE,UAAQ,EAACoC,UAAU,iBAAgB5E,SAAA,CAC5DG,cAAC6H,IAAK,CAACG,IAAKpG,EAAQ4F,KAAO,GAAIU,KAAK,SAASC,UAAQ,IACrDjG,eAACI,IAAI,CAACD,UAAQ,EAACoC,UAAU,iBAAiBlC,SAlBxB7B,UACpB,IAAK4M,EAAc,OACnB,MAAME,OAbQA,IAChB,IAAIC,SAAQ,CAACC,EAASC,KACpB,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,IAAML,EAAQE,EAAOI,QACrCJ,EAAOK,QAAW5O,GAAUsO,EAAOtO,EAAM,IAQtB6O,CAASZ,GACtBa,QAAkB1N,EAAQ,CAC9BE,KAAM,kBACNE,OAAQ,OACRD,KAAM,CACJ4M,QAEF1M,eAEFnC,QAAQC,IAAIuP,GACZtM,EAAW,IAAKD,EAAS4F,IAAK2G,GAAY,EAM0BtO,SAAA,CAChEG,cAACsC,IAAKQ,MAAK,CACTpE,KAAK,OACLsE,MAAM,oBACNf,KAAK,MACLiB,SAAUA,CAAC/B,EAAC8E,KAAiB,IAAf,MAAE/F,GAAO+F,EACrBsH,EAAgBpM,EAAEiN,OAAOC,MAAM,IAC/B1P,QAAQC,IAAIuC,EAAEiN,OAAOC,MAAM,GAAG,IAGlCrO,cAACsC,IAAKa,OAAM,CAACzE,KAAK,SAASS,QAASA,EAAQU,SAAC,sBAIvC,EC4LCyO,OAtNSA,KAEtB,MAAO1M,EAASC,GAAcF,mBAAS,CACrC2F,UAAW,GACXC,SAAU,GACVzF,MAAO,GACPoL,OAAQ,GACR9F,WAAY,GACZM,SAAU,GACVP,OAAQ,GACRM,OAAQ,GACR3D,SAAS,EACTuD,IAAK,GACLG,IAAK,MAEArI,EAAS2B,GAAca,oBAAS,IAChCgB,EAAS4L,GAAc5M,mBAAS,CACrC6M,MAAM,EACN9P,KAAM,KACN2E,OAAQ,KACRC,SAAS,KAEJmL,EAAYC,GAAiB/M,mBAAS,QAIvCK,EAAgBA,CAACb,EAACvB,KAAuB,IAArB,KAAEqC,EAAI,MAAE/B,GAAON,EACvCuB,EAAEqB,iBACFX,EAAW,IACND,EACH,CAACK,GAAO/B,GACR,EA8BEyO,EAAmBA,CAACxN,EAAC8E,KAAA,IAAE,KAAEhE,GAAMgE,EAAA,OAAKyI,EAAczM,EAAK,EAC7D,OACEC,eAACC,IAAS,CAAAtC,SAAA,CACRqC,eAACyE,IAAI,CAACF,SAAS,MAAMG,SAAO,EAACvE,UAAQ,EAAAxC,SAAA,CACnCG,cAAC2G,IAAKE,KAAI,CACR5E,KAAK,OACL6E,OAAuB,SAAf2H,EACRxJ,QAAS0J,IAGX3O,cAAC2G,IAAKE,KAAI,CACR5E,KAAK,QACL6E,OAAuB,UAAf2H,EACRxJ,QAAS0J,IAGX3O,cAAC2G,IAAKE,KAAI,CACR5E,KAAK,UACL6E,OAAuB,YAAf2H,EACRxJ,QAAS0J,OAGG,UAAfF,EACCzO,cAACqN,GAAsB,CAACzL,QAASA,EAASC,WAAYA,IACrC,SAAf4M,EACFvM,eAACE,IAAO,CAACqE,SAAS,SAASpE,UAAQ,EAACoC,UAAU,iBAAgB5E,SAAA,CAC5DG,cAAA,MAAAH,SAAI,uBACJqC,eAACI,IAAI,CACHD,UAAQ,EACRE,SAxDY7B,UACpBS,EAAEqB,iBAEF,IACE,MAAMoM,QAAoBnO,EAAQ,CAChCE,KAAM,gBACNE,OAAQ,OACRD,KAAMgB,EACNd,eAEFnC,QAAQC,IAAIgQ,GACZL,EAAW,CACTC,MAAM,EACN9P,KAAM,UACN2E,OAAQ,UACRC,QAAQ,6CAADtC,OAA+C4N,IAE1D,CAAE,MAAOzN,GACPxC,QAAQC,IAAIuC,EAAEwB,SACd4L,EAAW,CACTC,MAAM,EACN9P,KAAM,QACN2E,OAAQ,QACRC,QAASnC,EAAEwB,SAEf,GAgCQxD,QAASA,EACTsF,UAAU,iBAAgB5E,SAAA,CAE1BqC,eAACI,IAAK0I,MAAK,CAACgC,OAAO,QAAOnN,SAAA,CACxBG,cAACsC,IAAKQ,MAAK,CACTC,OAAK,EACLC,MAAM,aACNC,YAAY,aACZhB,KAAK,YACLiB,SAAUlB,EACV9B,MAAO0B,EAAQ0F,YAEjBtH,cAACsC,IAAKQ,MAAK,CACTC,OAAK,EACLC,MAAM,YACNC,YAAY,YACZhB,KAAK,WACLiB,SAAUlB,EACV9B,MAAO0B,EAAQ2F,WAEjBvH,cAACsC,IAAKuM,OAAM,CACV9L,OAAK,EACLC,MAAM,SACN8L,QAASpC,GACTzJ,YAAY,SACZhB,KAAK,SACLiB,SAAUlB,EACV9B,MAAO0B,EAAQsL,YAGnBhL,eAACI,IAAK0I,MAAK,CAACgC,OAAO,QAAOnN,SAAA,CACxBG,cAACsC,IAAKuM,OAAM,CACV9L,OAAK,EACLC,MAAM,aACN8L,QAASlC,GACT3J,YAAY,aACZhB,KAAK,aACL/B,MAAO0B,EAAQwF,WACflE,SAAUlB,IAEZhC,cAACsC,IAAKuM,OAAM,CACV9L,OAAK,EACLC,MAAM,eACN8L,QAASjC,GACT5J,YAAY,eACZhB,KAAK,WACL/B,MAAO0B,EAAQ8F,SACfxE,SAAUlB,OAGdE,eAACI,IAAK0I,MAAK,CAACgC,OAAO,QAAOnN,SAAA,CACxBG,cAACsC,IAAKQ,MAAK,CACTC,OAAK,EACLC,MAAM,QACNC,YAAY,QACZvE,KAAK,QACLuD,KAAK,QACLiB,SAAUlB,EACV9B,MAAO0B,EAAQE,QAEjBI,eAACI,IAAKwC,MAAK,CAAAjF,SAAA,CACTG,cAAA,SAAAH,SAAO,WACPqC,eAACY,KAAK,CACJC,OAAK,EACLC,MAAM,SACNC,YAAY,SACZhB,KAAK,SACL/B,MAAO0B,EAAQ6F,OACfvE,SAAUlB,EAAcnC,SAAA,CAExBG,cAAC+O,KAAK,CAACzE,OAAK,EAAAzK,SAAC,MACbG,cAAA,qBAINkC,eAACI,IAAK0I,MAAK,CAACgC,OAAO,QAAOnN,SAAA,CACxBG,cAACsC,IAAKQ,MAAK,CACTpE,KAAK,OACLsE,MAAM,gBACNC,YAAY,MACZ/C,MAAO0B,EAAQyF,IACfpF,KAAK,MACLiB,SAAUlB,IAEZhC,cAACsC,IAAKuM,OAAM,CACV9L,OAAK,EACLC,MAAM,SACN8L,QAAShC,GACT7J,YAAY,SACZhB,KAAK,SACL/B,MAAO0B,EAAQuF,OACfjE,SAAUlB,OAGdhC,cAACsC,IAAK6K,SAAQ,CACZnK,MAAM,WACNf,KAAK,UACLmL,QAASxL,EAAQkC,QACjBZ,SAAUA,CAAC/B,EAAC6N,KAAA,IAAE,KAAE/M,EAAI,QAAEmL,GAAS4B,EAAA,OAC7BnN,EAAW,IACND,EACH,CAACK,GAAOmL,GACR,IAGNpN,cAACsC,IAAKa,OAAM,CAAAtD,SAAC,cAEd8C,EAAQ6L,MACPxO,cAACoD,IAAO,CACN/D,MAAwB,UAAjBsD,EAAQjE,KACfuF,QAA0B,YAAjBtB,EAAQjE,KACjB2E,OAAQV,EAAQU,OAChBC,QAASX,EAAQW,aAKvBtD,cAAC+M,GAAmB,CAACnL,QAASA,MAEtB,E,qBCtNDqN,OAdMrP,IAAuC,IAAtC,QAAEgC,EAAO,WAAEC,EAAU,QAAEqN,GAAStP,EAOpD,OACEI,cAACmC,IAAS,CAAAtC,SACRG,cAACmP,KAAc,CAACjP,MAAO0B,EAAQ1B,MAAOgD,SAPxBhD,IAChB2B,EAAW,IAAKD,EAAS1B,UACzBgP,EAAQhP,EAAMyI,SAAS,QAAQ,KAMnB,ECChB,MAAMyG,GAAcxP,IAAoB,IAAnB,KAAEyP,EAAI,IAAE7H,GAAK5H,EAChC,OACEsC,eAAA,OAAArC,SAAA,CACEG,cAAC6H,IAAK,CAACG,IAAKR,EAAKU,KAAK,WACtBlI,cAAA,OAAKsP,wBAAyB,CAAEC,OAAQF,OACpC,EAoFKG,I,GAAAA,GAhFQA,KACrB,MAAOnJ,EAAYC,GAAiB3E,mBAAS,WACvC4E,EAAkBA,CAACpF,EAAC8E,KAAA,IAAE,KAAEhE,GAAMgE,EAAA,OAAKK,EAAcrE,EAAK,GACrDL,EAASC,GAAcF,mBAAS,CACrCzB,MAAOiP,KAAeM,mBACtBjI,IAAK,MAEA6H,EAAMH,GAAWvN,mBAAS,KAC1BxC,EAAS2B,GAAca,oBAAS,IAChCsC,EAASK,GAAc3C,mBAAS,OAChCtC,EAAOqC,GAAYC,mBAAS,MAyBnC,OACE3B,cAACmC,IAAS,CAAAtC,SACRqC,eAAA,OAAKuC,UAAU,oBAAmB5E,SAAA,CAChCG,cAACwG,IAAM,CAACC,SAAS,MAAMC,GAAG,KAAKnC,UAAU,OAAOwG,OAAK,EAAAlL,SAAC,iCAGtDqC,eAACyE,IAAI,CAACF,SAAS,MAAMG,SAAO,EAAA/G,SAAA,CAC1BG,cAAC2G,IAAKE,KAAI,CACR5E,KAAK,UACL6E,OAAuB,YAAfT,EACRpB,QAASsB,IAEXvG,cAAC2G,IAAKE,KAAI,CACR5E,KAAK,QACL6E,OAAuB,UAAfT,EACRpB,QAASsB,IAEXvG,cAAC2G,IAAKE,KAAI,CACR5E,KAAK,UACL6E,OAAuB,YAAfT,EACRpB,QAASsB,OAGbvG,cAACoC,IAAO,CAACqE,SAAS,SAAQ5G,SACR,YAAfwG,EACCrG,cAACiP,GAAY,CACXC,QAASA,EACTtN,QAASA,EACTC,WAAYA,IAEG,UAAfwE,EACFrG,cAACqN,GAAsB,CAACzL,QAASA,EAASC,WAAYA,IAEtD7B,cAACoP,GAAW,CAACC,KAAMA,EAAM7H,IAAK5F,EAAQ4F,QAG1CxH,cAACmD,IAAM,CAAChE,QAASA,EAAS8F,QA3DVvE,UACpBS,EAAEqB,iBACF,IACE7D,QAAQC,IAAIyQ,GACZ,MAAMjO,QAAiBX,EAAQ,CAC7BE,KAAM,YACNE,OAAQ,OACRD,KAAM,CACJ4G,IAAK5F,EAAQ4F,IACb6H,QAEFvO,eAEFwD,EAAWlD,GACXM,EAAS,KACX,CAAE,MAAOP,GACPxC,QAAQC,IAAIuC,EAAEwB,SACd2B,EAAW,MACX5C,EAASP,EAAEwB,QACb,CAAC,QACC,MACF,GAsCqD9C,SAAC,WAGnDG,cAACgE,EAAW,CAAC3E,MAAOA,EAAO4E,QAASA,QAE3B,ECnCDyL,OAtDGA,KAChB,MAAMC,EAAiB9D,YAAGC,QAAAC,YAAA,gZA0BpB,QAAE5M,EAAO,MAAEE,EAAK,KAAEuB,EAAI,QAAE6K,GAAYO,YAAS2D,GACnD,GAAIxQ,EACF,OACEa,cAACoL,GAAW,IAGhB,GAAI/L,EACF,OACCW,cAACuL,GAAS,CAAClM,MAAOA,IAGrB,MAAM,SAAEoL,GAAa7J,EAErB,OACEsB,eAACC,IAAS,CAAAtC,SAAA,CACRG,cAACwL,GAAW,CAACC,QAASA,IACtBzL,cAAA,OAAKuD,MAAO,CAAEkJ,OAAQ,UACtBzM,cAACwK,EAAgB,CAACC,SAAUA,IAC5BzK,cAAA,OAAKuD,MAAO,CAAEkJ,OAAQ,UACtBzM,cAACwP,GAAc,IACfxP,cAAA,OAAKuD,MAAO,CAAEkJ,OAAQ,UACtBzM,cAACsO,GAAe,IAChBtO,cAAA,OAAKuD,MAAO,CAAEkJ,OAAQ,YACZ,E,UCCDmD,OAvDFhQ,IAAe,IAADqH,EAAA,IAAb,KAAE4I,GAAMjQ,EACpB,MAAMkQ,EAAUC,oBACV,MAACvR,GAASiD,qBAAWhC,IACpBN,EAAS2B,GAAca,oBAAS,IAChCtC,EAAOqC,GAAYC,mBAAS,OAC5BsC,EAASK,GAAc3C,mBAAS,MACvCiJ,qBAAU,KACRkF,EAAQE,QAAQC,UAAYJ,EAAKR,IAAI,GACpC,CAACQ,IAsBJ,OACE3N,eAACE,IAAO,CAAAvC,SAAA,CACNG,cAACkQ,KAAKC,MAAK,CAAAtQ,SACTqC,eAACgO,KAAK5H,QAAO,CAAAzI,SAAA,CACXqC,eAACgO,KAAKE,QAAO,CAAAvQ,SAAA,CACXG,cAAC6H,IAAK,CAAC0C,QAAM,EAACvC,IAAK6H,EAAKQ,WAAW7I,KAAO,KAC1CxH,cAAA,UAAAH,SAASgQ,EAAKQ,WAAWpO,OAAc,UACvCjC,cAAA,SACAA,cAAA,YAEFA,cAAC6H,IAAK,CAACK,KAAK,QAAQF,IAAK6H,EAAKrI,MAC9BxH,cAAA,SACAA,cAAA,OAAKsQ,IAAKR,EAASvM,MAAO,CAAEiF,QAAS,eAIlC,OAALhK,QAAK,IAALA,GAAW,QAANyI,EAALzI,EAAOU,YAAI,IAAA+H,GAAXA,EAAanD,QACb9D,cAAC6I,IAAI,CAAC5G,KAAK,QAAQ9C,QAASA,EAAS8F,QArCxBvE,UACjBS,EAAEqB,iBACF7D,QAAQC,IAAI,eACZ,IACE,MAAMwC,QAAiBX,EAAQ,CAC7BE,KAAK,YACLE,OAAO,SACPD,KAAK,CACHsG,IAAI2I,EAAK3I,KAEXpG,eAEFwD,EAAWlD,GACXM,EAAS,KACX,CAAC,MAAMP,GACLxC,QAAQC,IAAIuC,EAAEwB,SACdjB,EAASP,EAAEwB,SACX2B,EAAW,KACb,GAmB+D6F,MAAM,SAC/D,KAEJnK,cAACgE,EAAW,CAAC3E,MAAOA,EAAO4E,QAASA,MAC5B,EC7CCsM,I,GAAAA,GAVO3Q,IAAgB,IAAf,MAAE4Q,GAAO5Q,EAC9B,OACEI,cAAAkE,WAAA,CAAArE,SACG2Q,EAAMvF,KAAK4E,GACH7P,cAAC4P,GAAI,CAAgBC,KAAMA,GAAhBA,EAAK3I,QAExB,EC8BQuJ,I,GAAAA,GA/BQA,KACrB,MAAMC,EAAc7E,YAAGC,QAAAC,YAAA,2JAcjB,QAAE5M,EAAO,MAAEE,EAAK,KAAEuB,EAAI,QAAE6K,GAAYO,YAAS0E,GACnD,OAAIvR,EACKa,cAACoL,GAAW,IAEjB/L,EACKW,cAACuL,GAAS,CAAClM,MAAOA,IAIzB6C,eAACC,IAAS,CAACoB,MAAO,CAAEiF,QAAS,OAAQmI,OAAQ,OAAQC,UAAW,UAAW/Q,SAAA,CACzEG,cAACwL,GAAW,CAACC,QAASA,IACtBzL,cAACuQ,GAAa,CAACC,MAAO5P,EAAK4P,UACjB,E,oBChBhB,MAAM1B,GAAU,CACd,CAAEnC,IAAK,aAAcR,KAAM,aAAcjM,MAAO,cAChD,CAAEyM,IAAK,SAAUR,KAAM,SAAUjM,MAAO,UACxC,CAAEyM,IAAK,WAAYR,KAAM,WAAYjM,MAAO,YAC5C,CAAEyM,IAAK,OAAQR,KAAM,OAAQjM,MAAO,SAEhC2Q,GAAoBhF,YAAGC,QAAAC,YAAA,mLAyGd+E,OAzFIA,KACjB,MAAM,QAAE3R,EAAO,MAAEE,EAAK,KAAEuB,EAAI,QAAE6K,GAAYO,YAAS6E,KAC5CE,EAAQC,GAAarP,mBAAS,eAC9BzB,EAAO+Q,GAAYtP,mBAAS,KAC5BuP,EAAWC,GAAgBxP,oBAAa,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMsQ,YAAa,KACvDE,EAAaC,GAAkB1P,oBAAa,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMsQ,YAAa,IAClEtG,qBAAU,KACRuG,GAAiB,OAAJvQ,QAAI,IAAJA,OAAI,EAAJA,EAAMsQ,YAAa,IAChCG,GAAmB,OAAJzQ,QAAI,IAAJA,OAAI,EAAJA,EAAMsQ,YAAa,GAAG,GACpC,CAACtQ,IAeJ,OAAIzB,EACKa,cAACoL,GAAW,IAEjB/L,EACKW,cAACuL,GAAS,CAAClM,MAAOA,IAIzB6C,eAACC,IAAS,CAACoB,MAAO,CAAEqN,UAAW,UAAW/Q,SAAA,CACxCG,cAACwL,GAAW,CAACC,QAASA,IACtBvJ,eAACsE,IAAM,CAACE,GAAG,KAAKqE,OAAK,EAAAlL,SAAA,CAAC,sBACAkR,KAEtB7O,eAACY,KAAK,CACJpE,KAAK,OACLuE,YAAY,YACZxE,QAAM,EACNyB,MAAOA,EACPgD,SAAUA,CAAC/B,EAACvB,KAAA,IAAE,MAAEM,GAAON,EAAA,OAAKqR,EAAS/Q,EAAM,EAACL,SAAA,CAE5CG,cAAA,YACAA,cAAC6O,KAAM,CACLyC,SAAO,EACPxC,QAASA,GACT5O,MAAO6Q,EACP7N,SAAUA,CAAC/B,EAAC8E,KAAiB,IAAf,MAAE/F,GAAO+F,EACrB+K,EAAU9Q,EAAM,IAGpBF,cAACmD,IAAM,CAACzE,KAAK,SAASuG,QA1CJ9D,IACtBA,EAAEqB,iBACF,MAAMsM,EAAU,CACdyC,cAAc,EACdC,KAAM,CAACT,IAIHU,EAFO,IAAIC,KAAKN,GAAe,GAAItC,GACrB6C,OAAOzR,GACG+K,KAAK2G,GAAMA,EAAEC,OAC3ClT,QAAQC,IAAI6S,GACZN,EAAaM,EAAe,EAgCsB5R,SAC5CG,cAAC6I,IAAI,CAAC5G,KAAK,gBAIfjC,cAACoC,IAAO,CAAAvC,SACNG,cAACoI,IAAK4C,MAAK,CAAC7C,UAAQ,EAAAtI,SACI,IAArBqR,EAAUzH,OACTzJ,cAACoD,IAAO,CAAAvD,SAAC,sBAETqR,EAAUjG,KAAKtB,GAEX3J,cAACgH,EAAY,CAEXE,IAAKyC,EAASzC,IACdC,OAAQwC,EAASxC,OACjBC,WAAYuC,EAASvC,WACrBM,SAAUiC,EAASjC,SACnBJ,UAAWqC,EAAS1H,KACpBuF,IAAKmC,EAASnC,IACdzE,OAAO,EACPsE,IAAKsC,EAAStC,IACdvF,MAAO6H,EAAS7H,MAChB2F,OAAQkC,EAASlC,OACjB3D,QAAS6F,EAAS7F,QAClB6D,mBAAmB,GAZdgC,EAASzC,aAmBhB,E,OC9GD4K,OAZAA,IAEX9R,cAAA,UAAQyE,UAAU,SAAQ5E,SACzBG,cAAA,OAAAH,SACGqC,eAAA,KAAArC,SAAA,CAAGG,cAAA,UAAAH,SAAQ,gDAAoD,WCJvE,MAAMkS,GAAanS,IAAoC,IAAnC,YAAEoS,EAAW,KAAEC,EAAI,OAAE5O,GAAQzD,EAC/C,OACEsC,eAACkG,IAAI,CAAAvI,SAAA,CACHG,cAACoI,IAAKE,QAAO,CAACjF,OAAQA,IACtBrD,cAACoI,IAAKE,QAAO,CAAC0J,YAAaA,IAC3B9P,eAACkG,IAAKE,QAAO,CAACM,OAAK,EAAA/I,SAAA,CACjBG,cAAC6I,IAAI,CAAC5G,KAAK,mBACXjC,cAAA,KAAGkS,KAAMD,EAAM7D,OAAO,SAAS+D,IAAI,aAAYtS,SAAC,uBAI7C,EAILe,GAAO,CACX,CACEsG,IAAK,EACL7D,OAAQ,SACR2O,YACE,+EACFC,KAAM,8BAER,CACE/K,IAAK,EACL7D,OAAQ,WACR2O,YAAa,kDACbC,KAAM,gCAER,CACE/K,IAAK,EACL7D,OAAQ,eACR2O,YACE,4FACFC,KAAM,6BAiCKG,I,GAAAA,GA9BEA,IAEblQ,eAAAgC,WAAA,CAAArE,SAAA,CACAqC,eAACC,IAAS,CAAAtC,SAAA,CACRG,cAAA,OAAKyE,UAAU,OAAM5E,SACnBG,cAAA,MAAAH,SAAI,YAENqC,eAACE,IAAO,CAAAvC,SAAA,CACNG,cAACwG,IAAM,CAACE,GAAG,KAAKqE,OAAK,EAAAlL,SAAC,0BAGtBG,cAACoI,IAAK4C,MAAK,CAAAnL,SACRe,GAAKqK,KAAKzB,GAEPxJ,cAAC+R,GAAU,CAET1O,OAAQmG,EAAEnG,OACV2O,YAAaxI,EAAEwI,YACfC,KAAMzI,EAAEyI,MAHHzI,EAAEtC,eAUnBlH,cAAC8R,GAAM,O,OCWIO,OArEIC,IACjB,MAAM/Q,EAASC,cACT0F,EAAMoL,EAAMC,MAAMC,OAAOC,GACzBC,EAAmB7G,YAAGC,QAAAC,YAAA,+VAsBtB,QAAC5M,EAAO,MAAEE,EAAK,KAAEuB,GAAQoL,YAAS0G,EAAiB,CACvDzG,UAAU,CAAC/E,SAEb,GAAG/H,EAAS,OAAOa,cAACoL,GAAW,IAC/B,GAAG/L,IAAUuB,IAASA,EAAK+I,SAEzB,OADApI,EAAOsE,KAAK,WACL,KAETlH,QAAQC,IAAIgC,GACZ,MAAM,KAACqB,EAAI,MAAEH,EAAK,IAAE0F,EAAG,OAAEL,EAAM,WAAEC,EAAU,SAAEM,EAAQ,IAAEL,EAAG,OAAEI,EAAM,QAAE3D,IAAe,OAAJlD,QAAI,IAAJA,OAAI,EAAJA,EAAM+I,WAAY,CAAC,EAClG,IAAI,YAAE5C,EAAW,aAAEkC,GAAiBrI,EAAK+I,UAAY,CAAC,EAKtD,OAJA5C,EAAcA,EAAYkE,KAAKzB,GAAM,IAAInF,KAAKmF,EAAEL,MAAMtE,uBACtDoE,EAAeA,EAAagC,KAAKzB,GAC/B,IAAInF,KAAKmF,EAAEL,MAAMtE,uBAGjB3C,eAACC,IAAS,CAAAtC,SAAA,CACRqC,eAACsE,IAAM,CAACE,GAAG,KAAKqE,OAAK,EAAAlL,SAAA,CAAEoC,EAAK,gBAC5BjC,cAACoC,IAAO,CAACmC,UAAU,SAAQ1E,SACzBG,cAACgH,EAAY,CACXjE,OAAO,EACPmE,IAAKA,EACLC,OAAQA,EACRC,WAAYA,EACZC,IAAKA,EAAImF,MAAM,KAAK,GACpB1K,MAAOA,EACPwF,UAAWrF,EACXuF,IAAKA,EACLE,SAAUA,EACVD,OAAQA,EACR3D,QAAWA,EACX8D,kBAAkB,MAGtB5H,cAACgJ,EAAkB,CACjBjC,YAAaA,GAAe,GAC5BkC,aAAcA,GAAgB,GAC9BC,0BAA4B,IAE9BlJ,cAAA,OAAKuD,MAAO,CAAEkJ,OAAQ,YACZ,E,OClEhB,MAAMkG,GAAqB/S,IAAsC,IAArC,QAACqF,EAAO,KAAEhD,EAAI,QAAE9C,EAAO,MAAEyT,GAAMhT,EACzD,OAAQsC,eAAA,OAAK+C,QAASA,EAAQpF,SAAA,CAACG,cAAC6I,IAAI,CAAC5G,KAAMA,EAAM9C,QAASA,IAAYyT,IAAY,EAgHrEC,OA7GM5M,IAA0D,IAAzD,IAACiB,EAAG,KAAEiF,EAAI,OAAEvC,EAAM,SAAED,EAAQ,QAAE8B,EAAO,YAAEqH,GAAY7M,EACvE,MAAO9G,EAAS2B,GAAca,oBAAS,GACjCoR,EAAerS,UACnB,IACE,MAAMU,QAAiBX,EAAQ,CAC7BE,KAAK,cACLE,OAAO,QACPD,KAAK,CACHsG,MACA0C,UAEF9I,eAEFnC,QAAQC,IAAIwC,EACd,CAAC,MAAMD,GACLxC,QAAQC,IAAIuC,EAAEwB,QAChB,CAAC,QAEC,YADA8I,GAAWA,IAEb,GAqBF,OACAvJ,eAACkG,IAAI,CAAAvI,SAAA,CACDG,cAACoI,IAAKE,QAAO,CAAAzI,SACbqC,eAAA,OAAKuC,UAAU,kBAAiB5E,SAAA,CAC9BG,cAAC6H,IAAK,CAAC0C,QAAM,EAACvC,IAAK2B,EAASnC,MAC5BxH,cAAA,MAAAH,SAAK8J,EAAS1H,YAGhBjC,cAACoI,IAAKE,QAAO,CAAC0J,YAAa7F,IAC3BjK,eAACkG,IAAKE,QAAO,CAACM,OAAK,EAACnE,UAAU,UAAS5E,SAAA,CAGrCiT,EACAlJ,IAAWpJ,EACX0B,eAAAgC,WAAA,CAAArE,SAAA,CACEG,cAAC2S,GAAkB,CACjB1N,QAASA,KAAO8N,EAAavS,EAAoB,EACjDyB,KAAK,kBACL9C,QAAWA,EACXyT,MAAQ,SAEV5S,cAAC2S,GAAkB,CACnB1N,QAASA,KAAO8N,EAAavS,EAAqB,EAClDyB,KAAK,iBACL9C,QAAWA,EACXyT,MAAQ,aAGVhJ,IAAWpJ,EACX0B,eAAAgC,WAAA,CAAArE,SAAA,CACEG,cAAC2S,GAAkB,CACjB1N,QAASA,KAAO8N,EAAavS,EAAoB,EACjDyB,KAAK,kBACL9C,QAAWA,EACXyT,MAAQ,SAEV5S,cAAC2S,GAAkB,CACjB1N,QAASA,KAAO8N,EAAavS,EAAoB,EACjDyB,KAAK,gBACL9C,QAAWA,EACXyT,MAAQ,YAGZ1Q,eAAAgC,WAAA,CAAArE,SAAA,CACEG,cAAC2S,GAAkB,CACjB1N,QAASA,KAAO8N,EAAavS,EAAqB,EAClDyB,KAAK,iBACL9C,QAAWA,EACXyT,MAAQ,UAEV5S,cAAC2S,GAAkB,CACjB1N,QAASA,KAAO8N,EAAavS,EAAoB,EACjDyB,KAAK,gBACL9C,QAAWA,EACXyT,MAAQ,YAEN,KAEJE,GAAe9S,cAAC2S,GAAkB,CAClC1N,QA9EWvE,UACjBS,EAAEqB,iBACF,IACE,MAAMpB,QAAiBX,EAAQ,CAC7BE,KAAK,cACLE,OAAO,SACPD,KAAK,CACHsG,OAEFpG,eAEFnC,QAAQC,IAAIwC,EACd,CAAC,MAAMD,GACLxC,QAAQC,IAAIuC,EAAEwB,QAChB,CAAC,QAEC,YADA8I,GAAWA,IAEb,GA8DMxJ,KAAK,QACL9C,QAAWA,EACXyT,MAAS,gBAGV,ECxFMI,OAxBOpT,IAAuD,IAAtD,UAACqT,EAAS,QAAEC,EAAO,KAAEC,EAAI,QAAE1H,EAAO,YAAEqH,GAAYlT,EACrE,OACEsC,eAACE,IAAO,CAAAvC,SAAA,CACJqC,eAAA,MAAArC,SAAA,CAAKqT,EAAQ,IAAClT,cAAC6I,IAAI,CAAC5G,KAAMkR,OAC1BnT,cAACoI,IAAK4C,MAAK,CAAAnL,SAEToT,EAAUhI,KAAIhF,IAAmC,IAAlC,IAACiB,EAAG,KAAEiF,EAAI,OAAEvC,EAAM,SAAED,GAAS1D,EAC1C,OAAQjG,cAAC6S,GAAY,CAEX3L,IAAKA,EACLiF,KAAMA,EACNvC,OAAQA,EACRD,SAAUA,EACV8B,QAAWA,EACXqH,YAAeA,GANR5L,EAOR,QAKP,EC6BCkM,I,GAAAA,GA9CMxT,IAAyB,IAAxB,QAACyT,EAAO,QAAE5H,GAAQ7L,EACtC,MAAOT,EAAS2B,GAAca,oBAAS,IAChCtC,EAAOqC,GAAYC,mBAAS,OAC5BsC,EAASK,GAAc3C,mBAAS,OAChCwK,EAAMmH,GAAW3R,mBAAS,IA0BjC,OACEO,eAACE,IAAO,CAAAvC,SAAA,CACNqC,eAACI,IAAI,CAAAzC,SAAA,CACHqC,eAACI,IAAKwC,MAAK,CAAAjF,SAAA,CACTG,cAAA,SAAAH,SAAO,SACPG,cAAA,SAAOiD,YAAW,yBAAAjC,OAA2BqS,EAAO,OAAOnT,MAAOiM,EAChEjJ,SAAW/B,GAAMmS,EAAQnS,EAAEiN,OAAOlO,YAGtCF,cAACmD,IAAM,CAACzE,KAAK,SAASS,QAASA,EAAS8F,QAjCxBvE,UACpBS,EAAEqB,iBACF,IACE,MAAMpB,QAAiBX,EAAQ,CAC7BE,KAAK,cACLE,OAAO,OACPD,KAAK,CACHuL,OACAvC,OAAOpJ,EACP6S,WAEFvS,eAEFwD,EAAWlD,GACXM,EAAS,KACX,CAAC,MAAMP,GACLxC,QAAQC,IAAIuC,EAAEwB,SACdjB,EAASP,EAAEwB,SACX2B,EAAW,KACb,CAAC,QAEC,YADAmH,GAEF,GAWmE5L,SAAC,cAElEG,cAACgE,EAAW,CAAC3E,MAAOA,EAAO4E,QAASA,MAC5B,ECwBCsP,OA7DK3T,IAAmD,IAADqH,EAAA,IAAjD,QAACoM,EAAO,SAAEG,GAAS,EAAI,YAAEV,GAAc,GAAKlT,EAE/D,MAAM,MAACpB,GAASiD,qBAAWhC,GACrBgU,EAAe5H,YAAGC,QAAAC,YAAA,wOAclB,QAAC5M,EAAO,MAAEE,EAAK,KAAEuB,EAAI,QAAE6K,GAAWO,YAASyH,EAAc,CAC7DxH,UAAU,CACRoH,aAGJ,GAAGlU,EAAS,OAAOa,cAACoL,GAAW,IAC/B,GAAG/L,EAAO,OAAOW,cAACuL,GAAS,IAC3B,GAAG3K,EAAK,CAEN,MAAM,YAAC8S,GAAe9S,EACtB,IAAI+S,EAAYD,EAAYnK,QAAQsI,GAASA,EAAKjI,SAAWpJ,IACzDoT,EAAaF,EAAYnK,QAAQsI,GAASA,EAAKjI,SAAWpJ,IAC1DqT,EAAYH,EAAYnK,QAAQsI,GAASA,EAAKjI,SAAWpJ,GAC/D,CACA,OACE0B,eAACC,IAAS,CAAAtC,SAAA,CACLiT,GAAe9S,cAACwL,GAAW,CAACC,QAASA,IACrC+H,EAAWxT,cAACoT,GAAY,CAACC,QAAgB,OAAL7U,QAAK,IAALA,GAAW,QAANyI,EAALzI,EAAOU,YAAI,IAAA+H,OAAN,EAALA,EAAaG,WAAYqE,QAASA,IAAc,KACrFzL,cAACwG,IAAM,CAACE,GAAG,KAAKpD,QAAS+P,EAAStI,OAAK,IACvC/K,cAACgT,GAAa,CACVC,UAAaU,EACbT,QAAS,OACTC,KAAQ,kBACR1H,QAAWA,EACXqH,YAAeA,IAEnB9S,cAACgT,GAAa,CACVC,UAAaW,EACbV,QAAS,QACTC,KAAQ,iBACR1H,QAAWA,EACXqH,YAAeA,IAEnB9S,cAACgT,GAAa,CACVC,UAAaY,EACbX,QAAS,OACTC,KAAQ,gBACR1H,QAAWA,EACXqH,YAAeA,MAEX,EC/BDgB,OAhCIA,KAAO,IAAD7M,EAAA8M,EACvB,MAAM,MAACvV,GAASiD,qBAAWhC,GAE3B,OACEyC,eAACC,IAAS,CAAAtC,SAAA,CACRG,cAACuT,GAAW,CACVF,QAAc,OAAL7U,QAAK,IAALA,GAAW,QAANyI,EAALzI,EAAOU,YAAI,IAAA+H,OAAN,EAALA,EAAaG,aAExBpH,cAAA,OAAKuD,MAAO,CAACkJ,OAAO,UAEb,OAALjO,QAAK,IAALA,GAAW,QAANuV,EAALvV,EAAOU,YAAI,IAAA6U,GAAXA,EAAajQ,QACb5B,eAAAgC,WAAA,CAAArE,SAAA,CACEG,cAACuT,GAAW,CACVF,QAAS,mBACTG,UAAY,EACZV,aAAe,IAEjB9S,cAAA,OAAKuD,MAAO,CAACkJ,OAAO,UACpBzM,cAACuT,GAAW,CACVF,QAAS,qBACTG,UAAY,EACZV,aAAe,OAGb,OAIE,E,SCrBDkB,OATMA,IAEjB9R,eAACmJ,IAAM,CAACvE,QAAM,EAAAjH,SAAA,CACZG,cAAA,KAAAH,SAAG,wBACHG,cAAA,KAAAH,SAAIG,cAACiU,KAAI,CAAC1Q,MAAO,CAAC4G,MAAM,UAAW+J,GAAG,IAAGrU,SAAC,sCCuBjCsU,OAhBHA,IAERjS,eAACkS,IAAM,CAAAvU,SAAA,CACLG,cAAC4D,IAAK,CAACjD,KAAK,IAAI0T,OAAK,EAACxU,SAAUuS,KAChCpS,cAAC4D,IAAK,CAACjD,KAAK,SAASd,SAAUG,cAACyD,EAAS,MACzCzD,cAAC0D,EAAc,CAAC/C,KAAK,aAAagD,UAAWgI,KAC7C3L,cAAC0D,EAAc,CAAC/C,KAAK,cAAcgD,UAAW8M,KAC9CzQ,cAAC0D,EAAc,CAAC/C,KAAK,UAAUgD,UAAWmN,KAC1C9Q,cAAC6D,EAAU,CAAClD,KAAK,SAASgD,UAAW+L,KACrC1P,cAAC0D,EAAc,CAAC/C,KAAK,aAAagD,UAAW0O,KAC7CrS,cAAC0D,EAAc,CAAC/C,KAAK,UAAUgD,UAAWmQ,KAC1C9T,cAAC4D,IAAK,CAACD,UAAWqQ,Q,8CCjBTM,OALA,IAAIC,KAAa,CAC9BC,IAAI,GAADxT,OAAKb,EAAIG,IAAG,YACfmU,MAAO,IAAIC,O,OCFN,MCIDC,GAAgB,CACpB,CACE1C,KAAK,aACLkB,KAAK,QAEP,CACElB,KAAK,SACLkB,KAAK,UAEP,CACElB,KAAK,YACLkB,KAAK,gBAEP,CACElB,KAAK,SACLkB,KAAK,mBAoFMyB,OAhFAA,KACb,MAAM,MAAEpW,EAAK,SAAEsB,GAAa2B,qBAAWhC,IAChC0T,EAAM0B,GAAWlT,mBAAS,YAC3BmT,EAAY/E,mBAClB,IAAIgF,EAAW,CAAC,CACd9C,KAAK,QACLkB,KAAK,gBAEH3U,EAAMU,OACR6V,EAAWJ,GACPnW,EAAMU,KAAK4E,UACbiR,EAAW,IAAIJ,GAAe,CAAC1C,KAAK,QAASkB,KAAK,gBAItD,MACM6B,EAAeA,IDvCDtU,WACpB,IAIE,OAHAZ,EAAS,CAAEpB,KAAMJ,UACXyC,IAAM8O,KAAK,eACjB/P,EAAS,CAAEpB,KAAMJ,KACV,CACT,CAAE,MAAO6C,GAMP,OALAxC,QAAQC,IAAIuC,GACZrB,EAAS,CACPpB,KAAMJ,EACNO,QAAS,CAAEK,KAAM,KAAMG,MAAO8B,EAAEC,SAASR,SAEpC,CACT,GC0B2BqU,CAAOnV,GAMlC,OACEoC,eAAA,OAAArC,SAAA,CACEG,cAACiU,KAAI,CAACC,GATO,IASMrU,SACjBG,cAAA,MAAIyE,UAAU,OAAM5E,SAAC,iBAEtBkV,EAAStL,OAAS,EACjBvH,eAAA,OAAArC,SAAA,CACEqC,eAAA,MAAIuC,UAAU,YAAW5E,SAAA,CACtBkV,EAAS9J,KAAI,CAAArL,EAAesV,KAAS,IAAvB,KAACjD,EAAI,KAAEkB,GAAKvT,EACzB,OACEI,cAACiU,KAAI,CAACxP,UAAU,OAAOyP,GAAE,IAAAlT,OAAMiR,EAAK7F,eAAgBvM,SAClDqC,eAAA,MAAArC,SAAA,CAAKoS,EAAK,IAACjS,cAAC6I,IAAI,CAAC5G,KAAMkR,QADiC+B,EAEnD,IAGV1W,EAAMU,KAAOc,cAAA,MAAIiF,QAAS+P,EAAanV,SAAC,WAAc,QAGzDqC,eAAA,OAAKuC,UAAU,aAAaQ,QAvBlBkQ,KAChBL,EAAU9E,QAAQoF,UAAUC,OAAO,UACVR,EAAZ,aAAT1B,EAA6B,wBACpB,WAAW,EAoB6BtT,SAAA,CAC7CG,cAAC6I,IAAI,CAAC5G,KAAMkR,IACZjR,eAAA,MAAIuC,UAAU,0BAA0B6L,IAAKwE,EAAUjV,SAAA,CACpDkV,EAAS9J,KAAI,CAAAhF,EAAeiP,KAAS,IAAvB,KAACjD,EAAI,KAAEkB,GAAKlN,EACzB,OACEjG,cAACiU,KAAI,CACHxP,UAAU,OACVyP,GAAE,IAAAlT,OAAMiR,EAAK7F,eAAgBvM,SAG7BqC,eAAA,MAAArC,SAAA,CAAKoS,EAAK,IAACjS,cAAC6I,IAAI,CAAC5G,KAAMkR,QAFlB+B,EAGA,IAGV1W,EAAMU,KACLc,cAAA,MAAIyE,UAAU,OAAOQ,QAAS+P,EAAanV,SAAC,WAG1C,cAKVkV,EAAS9J,KAAI,CAAA+D,EAAekG,KAAS,IAAvB,KAACjD,EAAI,KAAEkB,GAAKnE,EAExB,OADArQ,QAAQC,IAAIqT,GAEVjS,cAACiU,KAAI,CACHxP,UAAU,cACVyP,GAAE,IAAAlT,OAAMiR,EAAK7F,eAAgBvM,SAG7BqC,eAAA,MAAArC,SAAA,CAAKoS,EAAK,IAACjS,cAAC6I,IAAI,CAAC5G,KAAMkR,QAFlB+B,EAGA,MAIT,ECpFVI,IAASC,OACPvV,cAACwV,KAAc,CAAClB,OAAQA,GAAOzU,SAC7BG,cAACyV,KAAM,CAAA5V,SACLqC,eAACvC,EAAmB,CAAAE,SAAA,CAClBG,cAAC4U,GAAM,IACP5U,cAACmU,GAAG,WAIVuB,SAASC,eAAe,Q","file":"static/js/main.5b93c5ea.chunk.js","sourcesContent":["// import axios from 'axios';\r\nexport const ACTIONS = {\r\n  LOGIN: \"login\",\r\n  LOGOUT: \"logout\",\r\n  LOADING: \"loading\",\r\n  CURRENT_USER: \"current_user\",\r\n};\r\n\r\nexport const AuthReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.LOGIN:\r\n      console.log(action.payload);\r\n      localStorage.setItem(\"user\", JSON.stringify(action.payload.user));\r\n      return { ...action.payload, loading: false };\r\n    case ACTIONS.LOGOUT:\r\n      localStorage.removeItem(\"user\");\r\n      return { user: null, error: null, loading: false };\r\n    case ACTIONS.LOADING:\r\n      return { user: null, error: null, loading: true };\r\n    case ACTIONS.CURRENT_USER:\r\n      const userData = JSON.parse(localStorage.getItem(\"user\"));\r\n      console.log(localStorage.getItem(\"user\"), userData);\r\n      return { user: userData, error: null, loading: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createContext, useReducer } from \"react\";\r\nimport { AuthReducer } from \"../reducers/auth\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst UserContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AuthReducer, {\r\n    user: JSON.parse(localStorage.getItem(\"user\")),\r\n    error: null,\r\n    loading: false,\r\n  });\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        state,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserContextProvider;\r\n","const development = false;\r\nexport const URL = {\r\n  dev: \"http://localhost:5000\",\r\n  prod: \"https://bhrms-demo.onrender.com\",\r\n  use: development ? \"http://localhost:5000\" : \"https://bhrms-demo.onrender.com\",\r\n};\r\n\r\nexport const USER_REQUESTS_TYPE = {\r\n  BONUS: \"bonus\",\r\n  PAYROLL: \"payroll\",\r\n  LEAVE: \"leave\",\r\n};\r\n\r\nexport const TodoItemStatus = {\r\n  TODO : \"Todo\",\r\n  DOING: \"Doing\",\r\n  DONE: \"Done\"\r\n}\r\n","import axios from \"axios\";\r\nimport { URL } from \"../constants\";\r\nexport const REQUEST = async ({ path, data, method, setLoading }) => {\r\n  try {\r\n    if (setLoading) setLoading(true);\r\n    const response = await axios(`${URL.use + path}`, {\r\n      method,\r\n      data,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      withCredentials: true,\r\n    });\r\n    return response.data;\r\n  } catch (e) {\r\n    console.log(e);\r\n    console.log(e.response);\r\n    throw new Error(e.response.data);\r\n  } finally {\r\n    if (setLoading) setLoading(false);\r\n  }\r\n};\r\n","import { Button, Form, Segment, Container, Message } from \"semantic-ui-react\";\r\nimport { UserContext } from \"../../../context/UserContextProvider\";\r\nimport { useState, useContext } from \"react\";\r\nimport { login } from \"../../../actions/login\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LoginForm = () => {\r\n  const router = useHistory();\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [details, setDetails] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const changeHandler = (e, { name, value }) =>\r\n    setDetails({ ...details, [name]: value });\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const loginUser = await login(dispatch, details);\r\n    setLoading(false);\r\n    if (loginUser) {\r\n      return router.replace(\"/dashboard\");\r\n    } else {\r\n      setError(state.error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Segment inverted>\r\n        <Form inverted onSubmit={submitHandler} loading={state.loading}>\r\n          <Form.Input\r\n            fluid\r\n            label=\"email\"\r\n            placeholder=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={details.email}\r\n            onChange={changeHandler}\r\n          />\r\n          <Form.Input\r\n            fluid\r\n            label=\"password\"\r\n            placeholder=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={details.password}\r\n            onChange={changeHandler}\r\n          />\r\n          <Button loading={loading} type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n        {state.error ? (\r\n          <Message\r\n            error={state.error ? true : false}\r\n            header=\"Error\"\r\n            content={state.error}\r\n          />\r\n        ) : null}\r\n      </Segment>\r\n      {/* instructions for testing app */}\r\n      <Segment>\r\n        <h2 style={{textDecoration:\"underline\"}}>To test the application</h2>\r\n        <br/>\r\n        <h3>As a regular employee</h3>\r\n        <h4>email : jim@dundermifflin.com</h4>\r\n        <h4>password : Jim7</h4>\r\n        <br/>\r\n        <h3>As a admin</h3>\r\n        <h4>email : michael@dundermifflin.com</h4>\r\n        <h4>password : Michael5</h4>\r\n      </Segment>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { ACTIONS } from \"../reducers/auth\";\r\nimport { REQUEST } from \"./http\";\r\n\r\nexport const login = async (dispatch, details) => {\r\n  try {\r\n    dispatch({ type: ACTIONS.LOADING });\r\n    const loginData = await REQUEST({\r\n      path: \"/api/login\",\r\n      method: \"POST\",\r\n      data: details,\r\n    });\r\n    dispatch({ type: ACTIONS.LOGIN, payload: loginData });\r\n    return true;\r\n  } catch (e) {\r\n    console.log(e);\r\n    dispatch({\r\n      type: ACTIONS.LOGIN,\r\n      payload: { user: null, error: e.message },\r\n    });\r\n    return false;\r\n  }\r\n};\r\n","import LoginForm from \"../molecules/LoginForm\";\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <div>\r\n      <LoginForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import { Route, useHistory } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"../../../context/UserContextProvider\";\r\n\r\nconst ProtectedRoute = ({ path, component }) => {\r\n  const router = useHistory();\r\n  const { state } = useContext(UserContext);\r\n  if (!state.user || state.error) {\r\n    router.replace(\"/login\");\r\n    return null;\r\n  }\r\n  return <Route path={path} component={component} />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { Route, useHistory } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"../../../context/UserContextProvider\";\r\n\r\nconst AdminRoute = ({ path, component }) => {\r\n  const router = useHistory();\r\n  const { state } = useContext(UserContext);\r\n  console.log(state);\r\n  const { user, error } = state;\r\n  if (!user || error) {\r\n    router.replace(\"/login\");\r\n    return null;\r\n  }\r\n  if (!user.isAdmin) {\r\n    alert(\"You cannot access admin routes!\");\r\n    router.replace(\"/dashboard\");\r\n    return null;\r\n  }\r\n  return <Route path={path} component={component} />;\r\n};\r\n\r\nexport default AdminRoute;\r\n","import {Message} from 'semantic-ui-react'\r\n\r\nconst ShowMessage = ({error, success}) => {\r\n  return (\r\n    <>\r\n      {error ? \r\n        <Message negative>\r\n          <p>{error}</p>\r\n        </Message>\r\n      : null}\r\n      {success ? \r\n        <Message success>\r\n          <p>{success}</p>\r\n        </Message>\r\n      : null}\r\n     </>\r\n  );\r\n}\r\n \r\nexport default ShowMessage;","import Calendar from \"react-calendar\";\r\nimport { useState } from \"react\";\r\nimport { Button, Container, Form, TextArea } from \"semantic-ui-react\";\r\nimport { REQUEST } from \"../../../actions/http\";\r\nimport { USER_REQUESTS_TYPE } from \"../../../constants\";\r\nimport \"./style.css\";\r\nimport ShowMessage from \"../showMessage\";\r\n\r\nvar getDaysArray = function (start, end) {\r\n  const startDate = new Date(\r\n    start.getFullYear(),\r\n    start.getMonth(),\r\n    start.getDate() + 1\r\n  );\r\n  const endDate = new Date(\r\n    end.getFullYear(),\r\n    end.getMonth(),\r\n    end.getDate() + 1\r\n  );\r\n  for (\r\n    var arr = [], dt = new Date(startDate);\r\n    dt <= endDate;\r\n    dt.setDate(dt.getDate() + 1)\r\n  ) {\r\n    arr.push(new Date(dt));\r\n  }\r\n  return arr;\r\n};\r\n\r\nconst LeaveRequest = () => {\r\n  const [details, setDetails] = useState({\r\n    value: new Date(),\r\n    message: \"\",\r\n  });\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onClickHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (!details.value[0] || !details.value[1]) {\r\n        setError(\"Choose some dates\");\r\n        return;\r\n      }\r\n      const dates = getDaysArray(details.value[0], details.value[1]);\r\n      const data = {\r\n        dates: dates,\r\n        message: details.message,\r\n      };\r\n      const response = await REQUEST({\r\n        path: \"/api/request\",\r\n        method: \"POST\",\r\n        data: {\r\n          type: USER_REQUESTS_TYPE.LEAVE,\r\n          data,\r\n        },\r\n        setLoading,\r\n      });\r\n      console.log(response);\r\n      setSuccess(\"request has been created!\");\r\n      setError(null);\r\n      return;\r\n    } catch (e) {\r\n      console.log(e.message);\r\n      setError(e.message);\r\n      setSuccess(null);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container textAlign=\"left\">\r\n      <Calendar\r\n        className=\"calender\"\r\n        onChange={(val) => {\r\n          console.log(val);\r\n          setDetails({ ...details, value: val });\r\n        }}\r\n        value={details.value}\r\n        returnValue={\"range\"}\r\n        selectRange={true}\r\n      />\r\n      {details.value[0] && details.value[1] ? (\r\n        <h4>\r\n          Leave from {details.value[0].toLocaleDateString()} to{\" \"}\r\n          {details.value[1].toLocaleDateString()} (inc.)\r\n        </h4>\r\n      ) : null}\r\n      <Form>\r\n        <Form.Field\r\n          control={TextArea}\r\n          value={details.message}\r\n          onChange={(e, { value }) =>\r\n            setDetails({ ...details, message: value })\r\n          }\r\n          label=\"Leave Application\"\r\n          placeholder=\"Please elaborate your leave application...\"\r\n        />\r\n      </Form>\r\n      <br />\r\n      <Button loading={loading} onClick={onClickHandler}>\r\n        Request Leave\r\n      </Button>\r\n     <ShowMessage error={error} success={success} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LeaveRequest;\r\n","import { useState } from \"react\";\r\nimport { Button, Container, Form, TextArea,} from \"semantic-ui-react\";\r\nimport ShowMessage from '../showMessage'\r\nimport { REQUEST } from \"../../../actions/http\";\r\nimport { USER_REQUESTS_TYPE } from \"../../../constants\";\r\nimport \"./style.css\";\r\n\r\nconst Bonus = () => {\r\n  const [details, setDetails] = useState({\r\n    money: \"\",\r\n    message: \"\",\r\n  });\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onClickHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const data = {\r\n        amount: details.money,\r\n        message: details.message,\r\n      };\r\n      const response = await REQUEST({\r\n        path: \"/api/request\",\r\n        method: \"POST\",\r\n        data: {\r\n          type: USER_REQUESTS_TYPE.BONUS,\r\n          data,\r\n        },\r\n        setLoading,\r\n      });\r\n      console.log(response);\r\n      setSuccess(\"request has been created!\");\r\n      return;\r\n    } catch (e) {\r\n      console.log(e.message);\r\n      setError(e.message);\r\n      return;\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <Form>\r\n        <Form.Input\r\n          value={details.money}\r\n          onChange={(e, { value }) => setDetails({ ...details, money: value })}\r\n          label=\"Money amount\"\r\n          placeholder=\"Amount you want..\"\r\n          type=\"Number\"\r\n        />\r\n        <Form.Field\r\n          control={TextArea}\r\n          value={details.message}\r\n          onChange={(e, { value }) =>\r\n            setDetails({ ...details, message: value })\r\n          }\r\n          label=\"Why do you deserve a bonus?\"\r\n          placeholder=\"Elaborate your needs and arguments...\"\r\n        />\r\n      </Form>\r\n      <Button\r\n        loading={loading}\r\n        onClick={onClickHandler}\r\n        className=\"btn-padding\"\r\n      >\r\n        Bonus Request\r\n      </Button>\r\n      <ShowMessage error={error} success={success} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Bonus;\r\n","import { useState } from \"react\";\r\nimport { Button, Container, Form, TextArea} from \"semantic-ui-react\";\r\nimport { REQUEST } from \"../../../actions/http\";\r\nimport { USER_REQUESTS_TYPE } from \"../../../constants\";\r\nimport ShowMessage from \"../showMessage\";\r\n\r\nconst Payroll = () => {\r\n  const [details, setDetails] = useState({\r\n    message: \"\",\r\n  });\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onClickHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const data = {\r\n        message: details.message,\r\n      };\r\n      const response = await REQUEST({\r\n        path: \"/api/request\",\r\n        method: \"POST\",\r\n        data: {\r\n          type: USER_REQUESTS_TYPE.PAYROLL,\r\n          data,\r\n        },\r\n        setLoading,\r\n      });\r\n      console.log(response);\r\n      setSuccess(\"request has been created!\");\r\n      return;\r\n    } catch (e) {\r\n      console.log(e.message);\r\n      setError(e.message);\r\n      return;\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <Form>\r\n        <Form.Field\r\n          control={TextArea}\r\n          value={details.message}\r\n          onChange={(e, { value }) =>\r\n            setDetails({ ...details, message: value })\r\n          }\r\n          label=\"Message\"\r\n          placeholder=\"Message along with the request...\"\r\n        />\r\n      </Form>\r\n      <Button\r\n        loading={loading}\r\n        onClick={onClickHandler}\r\n        className=\"btn-padding\"\r\n      >\r\n        Payroll Request\r\n      </Button>\r\n      <ShowMessage error={error} success={success} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Payroll;\r\n","import { useState } from \"react\";\r\nimport { Segment, Menu, Header } from \"semantic-ui-react\";\r\nimport LeaveRequest from \"../../atoms/leave\";\r\nimport Bonus from \"../../atoms/bonus\";\r\nimport Payroll from \"../../atoms/payroll\";\r\nimport \"./style.css\";\r\n\r\nconst EmployeeRequestMenu = () => {\r\n  const [activeItem, setActiveItem] = useState(\"leave\");\r\n  const handleItemClick = (e, { name }) => setActiveItem(name);\r\n  return (\r\n    <div className=\"user-request-menu\">\r\n      <Header attached=\"top\" as=\"h3\" textAlign=\"left\">\r\n        User Request Menu\r\n      </Header>\r\n      <Menu attached=\"top\" tabular>\r\n        <Menu.Item\r\n          name=\"leave\"\r\n          active={activeItem === \"leave\"}\r\n          onClick={handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          name=\"payroll\"\r\n          active={activeItem === \"payroll\"}\r\n          onClick={handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          name=\"bonus\"\r\n          active={activeItem === \"bonus\"}\r\n          onClick={handleItemClick}\r\n        />\r\n      </Menu>\r\n      <Segment attached=\"bottom\">\r\n        {activeItem === \"bonus\" ? (\r\n          <Bonus />\r\n        ) : activeItem === \"leave\" ? (\r\n          <LeaveRequest\r\n            absentDates={[\"01/01/2021\", \"05/01/2021\", \"20/01/2021\"]}\r\n          />\r\n        ) : (\r\n          <Payroll />\r\n        )}\r\n      </Segment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeRequestMenu;\r\n","import { Card, Image, Icon, Button } from \"semantic-ui-react\";\r\nimport ShowMessage from '../../atoms/showMessage';\r\nimport {useContext, useState} from 'react'\r\nimport {REQUEST} from '../../../actions/http'\r\nimport {UserContext} from '../../../context/UserContextProvider'\r\nimport \"./style.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst UserInfoCard = ({\r\n  _id,\r\n  branch,\r\n  department,\r\n  dob,\r\n  email,\r\n  firstName,\r\n  lastName,\r\n  img,\r\n  salary,\r\n  position,\r\n  fluid,\r\n  showProfileButton = false,\r\n  showDeleteButton = false,\r\n  isAdmin = false\r\n}) => {\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  const router = useHistory()\r\n\r\n  const pushToUserProfile = () => {\r\n    router.push(`/users/${_id}`);\r\n  }\r\n  const deleteHandler = async () => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if(!confirm(`Are you sure you want to delete ${firstName}`)){\r\n      console.log(\"canceled delete\");\r\n      return;\r\n    }\r\n    try{\r\n      const response = await REQUEST({\r\n        path:'/api/employee',\r\n        method:\"DELETE\",\r\n        data:{\r\n          _id\r\n        },\r\n        setLoading\r\n      })\r\n      setSuccess(response)\r\n      setError(null)\r\n    }catch(e){\r\n      setSuccess(null)\r\n      setError(e.message)\r\n    }finally{\r\n      return;\r\n    }\r\n  }\r\n  const {state} = useContext(UserContext)\r\n  return (\r\n    <>\r\n      {fluid && (\r\n        <div>\r\n          <Image\r\n            rounded\r\n            bordered\r\n            src={img}\r\n            ui={true}\r\n            size=\"medium\"\r\n            centered\r\n          />\r\n        </div>\r\n      )}\r\n      <Card fluid={fluid}>\r\n        {!fluid && <img src={img} className=\"user-card-img\" alt=\"some\" />}\r\n        <Card.Content className=\"content\">\r\n          <Card.Header>\r\n            <h2>\r\n              {firstName} {lastName} {isAdmin && <h6 style={{background:\"blanchedalmond\", padding:\"1px 10px\"}}>Admin</h6>}\r\n            </h2>\r\n          </Card.Header>\r\n          <Card.Description>\r\n            Employee_id: <span className=\"highlight\">{_id}</span>\r\n          </Card.Description>\r\n          <Card.Meta>Date of Birth: {dob.toString()}</Card.Meta>\r\n          <Card.Description>\r\n            Department : <span className=\"highlight\">{department}</span>\r\n          </Card.Description>\r\n          <Card.Description>\r\n            Position : <span className=\"highlight\">{position}</span>\r\n          </Card.Description>\r\n          <Card.Description>\r\n            Branch : <span className=\"highlight\">{branch}</span>\r\n          </Card.Description>\r\n          <Card.Description>\r\n            Salary : <span className=\"highlight\">${salary}</span>\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <Icon name=\"mail\" />\r\n          {email}\r\n        </Card.Content>\r\n          {/* show delete user option only when logged in as admin */}\r\n          {state?.user?.isAdmin && showDeleteButton ? <Card.Content extra textAlign=\"right\">\r\n            Delete Employee<Icon name=\"trash\" onClick={deleteHandler} loading={loading} />\r\n          </Card.Content> : null }\r\n          <ShowMessage error={error} success={success}/>\r\n          {showProfileButton && <Button onClick={pushToUserProfile}>Show Profile</Button>}\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserInfoCard;\r\n","import Calendar from \"react-calendar\";\r\nimport { REQUEST } from \"../../../actions/http\";\r\nimport { Button, Container, Header } from \"semantic-ui-react\";\r\nimport ShowMessage from '../showMessage';\r\nimport \"./style.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst AttendanceCalender = ({ presentDates, absentDates, showMarkAttendanceButton=true }) => {\r\n  const [success, setSuccess] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const date = new Date(\r\n    new Date().getFullYear(),\r\n    new Date().getMonth(),\r\n    new Date().getDate() + 1\r\n  );\r\n  function tileClassName({ date, view }) {\r\n    // Add class to tiles in month view only\r\n    if (view === \"month\") {\r\n      // Check if a date React-Calendar wants to check is on the list of dates to add class to\r\n      const absent = absentDates\r\n        ? absentDates.filter((d) => d === date.toLocaleDateString())\r\n        : [];\r\n      const present = presentDates\r\n        ? presentDates.filter((d) => d === date.toLocaleDateString())\r\n        : [];\r\n      if (present.length) {\r\n        return \"present\";\r\n      }\r\n      if (absent.length) {\r\n        return \"absent\";\r\n      }\r\n    }\r\n  }\r\n  const onClickHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const data = {\r\n        date: date,\r\n        type: \"present\",\r\n      };\r\n      console.log(data);\r\n      const response = await REQUEST({\r\n        path: \"/api/attendance\",\r\n        method: \"POST\",\r\n        data,\r\n        setLoading,\r\n      });\r\n      console.log(response);\r\n      setSuccess(\"attendance for today marked,refresh to see the results.\");\r\n      setError(null);\r\n      return;\r\n    } catch (e) {\r\n      console.log(e.message);\r\n      setError(e.message);\r\n      setSuccess(null);\r\n      return;\r\n    }\r\n  };\r\n  return (\r\n    <Container textAlign=\"center\" fluid>\r\n      <Header as=\"h3\" attached=\"top\" textAlign=\"left\">\r\n        Attendance Calendar\r\n      </Header>\r\n      <h4>Today is {new Date().toLocaleDateString()}</h4>\r\n      <Calendar\r\n        value={new Date()}\r\n        className=\"calender\"\r\n        returnValue=\"start\"\r\n        selectRange={false}\r\n        tileClassName={tileClassName}\r\n      />\r\n      {showMarkAttendanceButton && <Button loading={loading} onClick={onClickHandler}>\r\n        Mark Today's Attendance\r\n      </Button>}\r\n     <ShowMessage error={error} success={success}/>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AttendanceCalender;\r\n","import { useState } from \"react\";\r\nimport { Button, Card, Image, Message,Icon } from \"semantic-ui-react\";\r\nimport { USER_REQUESTS_TYPE } from \"../../../constants\";\r\nimport { REQUEST } from \"../../../actions/http\";\r\n\r\nconst RequestCard = ({\r\n  _id,\r\n  employee,\r\n  type,\r\n  data,\r\n  status,\r\n  resolved_by,\r\n  disabled = false,\r\n  showDeleteOption = false\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [deleteMessage, setDeleteMessage] = useState(null);\r\n\r\n  const onClickHandler = async (e, { name }) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await REQUEST({\r\n        path: \"/api/request\",\r\n        method: \"PATCH\",\r\n        data: {\r\n          _id,\r\n          status: name,\r\n        },\r\n        setLoading,\r\n      });\r\n      setError(null);\r\n      console.log(response);\r\n      setSuccess(response);\r\n    } catch (e) {\r\n      console.log(e.message);\r\n      setError(e.message);\r\n      setSuccess(null);\r\n    } finally {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const deleteRequestHandler = async () => {\r\n    try {\r\n      const response = await REQUEST({\r\n        path: \"/api/request\",\r\n        method: \"DELETE\",\r\n        data: {\r\n          _id,\r\n        },\r\n        setLoading,\r\n      });\r\n      console.log(response);\r\n      setDeleteMessage(response);\r\n    } catch (e) {\r\n      console.log(e.message);\r\n      setDeleteMessage(e.message);\r\n    } finally {\r\n      return;\r\n    }\r\n  }\r\n  return (\r\n    <Card color=\"grey\">\r\n        { showDeleteOption ?\r\n            <>\r\n            {\r\n              deleteMessage ?\r\n              <Message>{deleteMessage}</Message> :\r\n              null \r\n            }\r\n            <Card.Content extra textAlign=\"right\">\r\n              Delete the request <Icon name=\"trash\" loading={loading} style={{cursor:\"pointer\"}} onClick={deleteRequestHandler} />\r\n            </Card.Content> \r\n           </>\r\n           : \r\n           null\r\n        }\r\n      <Card.Content>\r\n        <Image floated=\"right\" size=\"mini\" src={employee?.img} />\r\n        <Card.Header>{employee?.name}</Card.Header>\r\n        <Card.Meta>{type} request</Card.Meta>\r\n        <Card.Description>\r\n          <strong>\r\n            {type === USER_REQUESTS_TYPE.LEAVE &&\r\n              ` is asking for leave from ${data.dates.startDate} to ${data.dates.endDate}`}\r\n            {type === USER_REQUESTS_TYPE.BONUS &&\r\n              ` is asking for bonus of ${data.amount}`}\r\n            {type === USER_REQUESTS_TYPE.PAYROLL && ` is asking for payroll`}\r\n          </strong>\r\n          <br />\r\n          {data.message}\r\n        </Card.Description>\r\n      </Card.Content>\r\n      {status === \"pending\" ? (\r\n        <Card.Content extra>\r\n          <div className=\"ui two buttons\">\r\n            <Button\r\n              basic\r\n              color=\"green\"\r\n              onClick={onClickHandler}\r\n              name=\"approved\"\r\n              disabled={disabled}\r\n            >\r\n              Approve\r\n            </Button>\r\n            <Button\r\n              basic\r\n              color=\"red\"\r\n              onClick={onClickHandler}\r\n              name=\"rejected\"\r\n              disabled={disabled}\r\n            >\r\n              Decline\r\n            </Button>\r\n          </div>\r\n          {/* success or error based on server response */}\r\n          {error ? (\r\n            <Message error size=\"mini\">\r\n              <p>{error}</p>\r\n            </Message>\r\n          ) : null}\r\n          {success ? (\r\n            <Message success size=\"mini\">\r\n              <p>{success}</p>\r\n            </Message>\r\n          ) : null}\r\n        </Card.Content>\r\n      ) : (\r\n        <Card.Content extra>\r\n          <Image floated=\"right\" size=\"mini\" avatar src={resolved_by.img} />\r\n          <p>resolved by {resolved_by.name}</p>\r\n\r\n          <Message color={status === \"approved\" ? \"green\" : \"red\"} size=\"mini\">\r\n            <p>request has been {status}.</p>\r\n          </Message>\r\n        </Card.Content>\r\n      )}\r\n      \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RequestCard;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Card, Menu, Segment, Container, Header } from \"semantic-ui-react\";\r\nimport RequestCard from \"../../atoms/request\";\r\n\r\nconst RequestContainer = ({ requests, disabled = false, showDeleteOption = false }) => {\r\n  const [activeItem, setActiveItem] = useState(\"pending\");\r\n  const [requestsToShow, setRequestsToShow] = useState([]);\r\n  useEffect(() => {\r\n    const temp = requests.filter((req) => req.status === activeItem);\r\n    setRequestsToShow(temp);\r\n  }, [activeItem, requests]);\r\n  const handleItemClick = (e, { name }) => setActiveItem(name);\r\n  return (\r\n    <Container>\r\n      <Header as=\"h3\" block>\r\n        Requests From Employees\r\n      </Header>\r\n      <Menu attached=\"top\" tabular>\r\n        <Menu.Item\r\n          name=\"pending\"\r\n          active={activeItem === \"pending\"}\r\n          onClick={handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          name=\"approved\"\r\n          active={activeItem === \"approved\"}\r\n          onClick={handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          name=\"rejected\"\r\n          active={activeItem === \"rejected\"}\r\n          onClick={handleItemClick}\r\n        />\r\n      </Menu>\r\n      <Segment attached=\"bottom\">\r\n        <Card.Group centered>\r\n          {requestsToShow.map((request, index) => {\r\n            return (\r\n              <RequestCard\r\n                key={index}\r\n                _id={request._id}\r\n                status={request.status}\r\n                employee={request.employee}\r\n                data={request.data}\r\n                type={request.type}\r\n                resolved_by={request.resolved_by}\r\n                disabled={disabled}\r\n                showDeleteOption={showDeleteOption}\r\n              />\r\n            );\r\n          })}\r\n        </Card.Group>\r\n      </Segment>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RequestContainer;\r\n\r\n// {{name:\"Akshat garg\", img:'https://react.semantic-ui.com/images/avatar/large/steve.jpg'}}\r\n// {{\r\n//   amount:500,\r\n//   message:\"I reallhy need this, its a necessity\"\r\n// }}\r\n","import {Dimmer, Loader} from 'semantic-ui-react'\r\n\r\nconst LoadingPage = () => {\r\n  return (\r\n    <Dimmer active>\r\n      <Loader size=\"small\">Loading</Loader>\r\n    </Dimmer>\r\n  );\r\n}\r\n \r\nexport default LoadingPage;","import {Dimmer} from 'semantic-ui-react'\r\n\r\nconst ErrorPage = ({error}) => {\r\n  console.log(error)\r\n  return (\r\n    <Dimmer active>\r\n      <p>Some error occured!</p>\r\n    </Dimmer>\r\n  );\r\n}\r\n \r\nexport default ErrorPage;","import {Icon} from 'semantic-ui-react'\r\nconst RefreshIcon = ({refetch}) => {\r\n  return (\r\n    <div onClick={() => refetch()} style={{cursor:\"pointer\", display:\"inline\"}}>\r\n      <Icon name=\"refresh\" color=\"grey\" />\r\n      Refresh\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default RefreshIcon;","import { useContext } from \"react\";\r\nimport { Container, Segment } from \"semantic-ui-react\";\r\nimport { UserContext } from \"../../context/UserContextProvider\";\r\nimport EmployeeRequestMenu from \"../molecules/EmployeeRequestMenu\";\r\nimport UserInfoCard from \"../molecules/UserInfoCard\";\r\nimport AttendanceCalender from \"../atoms/Attendance\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport RequestContainer from \"../molecules/RequestContainer\";\r\nimport LoadingPage from \"./loadingPage\";\r\nimport ErrorPage from \"./errorPage\";\r\nimport RefreshIcon from \"../atoms/refreshIcon\";\r\n\r\nconst DashboardPage = () => {\r\n  const { state } = useContext(UserContext);\r\n  const {\r\n    _id,\r\n    branch,\r\n    department,\r\n    dob,\r\n    email,\r\n    firstName,\r\n    lastName,\r\n    img,\r\n    position,\r\n    salary,\r\n  } = state.user;\r\n\r\n  const USER_QUERY = gql`\r\n    query Employee($_id: String!) {\r\n      employee(_id: $_id) {\r\n        absentDates {\r\n          date\r\n        }\r\n        presentDates {\r\n          date\r\n        }\r\n      }\r\n      requests(employee_id: $_id) {\r\n        _id\r\n        employee {\r\n          _id\r\n          name\r\n          img\r\n        }\r\n        status\r\n        data {\r\n          amount\r\n          message\r\n          dates {\r\n            startDate\r\n            endDate\r\n          }\r\n        }\r\n        type\r\n        resolved_by {\r\n          name\r\n          img\r\n        }\r\n      }\r\n    }\r\n  `;\r\n  const { loading, error, data, refetch } = useQuery(USER_QUERY, {\r\n    variables: { _id },\r\n  });\r\n\r\n  if (loading) {\r\n    return <LoadingPage />\r\n  }\r\n  if (error) {\r\n    return <ErrorPage error={error} />\r\n  }\r\n  if (data) {\r\n    var { requests } = data;\r\n    var { absentDates, presentDates } = data.employee;\r\n    absentDates = absentDates.map((d) => new Date(d.date).toLocaleDateString());\r\n    presentDates = presentDates.map((d) =>\r\n      new Date(d.date).toLocaleDateString()\r\n    );\r\n    console.log(absentDates, presentDates);\r\n  }\r\n  const titleCase = (text) => {\r\n    var temp = text.toLowerCase();\r\n    return temp.charAt(0).toUpperCase() + temp.substr(1).toLowerCase();\r\n  };\r\n  return (\r\n    <Container>\r\n      <RefreshIcon refetch={refetch} />\r\n      <Segment textAlign=\"center\">\r\n        <UserInfoCard\r\n          fluid={true}\r\n          _id={_id}\r\n          branch={branch}\r\n          department={department}\r\n          dob={dob.split(\"T\")[0]}\r\n          email={email}\r\n          firstName={titleCase(firstName)}\r\n          lastName={titleCase(lastName)}\r\n          img={img}\r\n          position={position}\r\n          salary={salary}\r\n        />\r\n      </Segment>\r\n      <AttendanceCalender\r\n        absentDates={absentDates || []}\r\n        presentDates={presentDates || []}\r\n      />\r\n      <EmployeeRequestMenu />\r\n      <RequestContainer requests={requests || []} disabled={true} showDeleteOption = {true} />\r\n      <div style={{ height: \"50px\" }}></div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n","export const genderOptions = [\r\n  { key: \"m\", text: \"Male\", value: \"Male\" },\r\n  { key: \"f\", text: \"Female\", value: \"Female\" },\r\n  { key: \"o\", text: \"Other\", value: \"Other\" },\r\n];\r\nexport const jobOptions = [\r\n  { key: \"s\", text: \"Sales Department\", value: \"Sales Department\" },\r\n  { key: \"a\", text: \"Management Department\", value: \"Management Department\" },\r\n  { key: \"m\", text: \"Finance Department\", value: \"Finance Department\" },\r\n];\r\nexport const positionOptions = [\r\n  { key: \"i\", text: \"Intern\", value: \"Intern\" },\r\n  { key: \"r\", text: \"Regular Employee\", value: \"Regular Employee\" },\r\n  { key: \"m\", text: \"Manager\", value: \"Manager\" },\r\n];\r\nexport const branchOptions = [\r\n  { key: \"i\", text: \"Scranton\", value: \"Scranton\" },\r\n  { key: \"r\", text: \"Akron\", value: \"Akron\" },\r\n  { key: \"m\", text: \"Utica\", value: \"Utica\" },\r\n];\r\n","import { Form, Segment, Image } from \"semantic-ui-react\";\r\n\r\nconst PreviewEmployeeInfo = ({ details }) => {\r\n  return (\r\n    <Segment attached=\"bottom\" inverted className=\"form-container\">\r\n      <Image src={details.img} size=\"medium\" centered />\r\n      <Form inverted className=\"form-container\">\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Input\r\n            fluid\r\n            label=\"First name\"\r\n            readOnly\r\n            value={details.firstName}\r\n          />\r\n          <Form.Input\r\n            fluid\r\n            label=\"Last name\"\r\n            readOnly\r\n            value={details.lastName}\r\n          />\r\n          <Form.Input fluid label=\"Gender\" readOnly value={details.gender} />\r\n        </Form.Group>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Input\r\n            fluid\r\n            label=\"Department\"\r\n            readOnly\r\n            value={details.department}\r\n          />\r\n          <Form.Input\r\n            fluid\r\n            label=\"Department\"\r\n            readOnly\r\n            value={details.position}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Input fluid label=\"branch\" readOnly value={details.branch} />\r\n          <Form.Input fluid label=\"email\" readOnly value={details.email} />\r\n        </Form.Group>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Input label=\"date of birth\" value={details.dob} readOnly />\r\n          <Form.Input label=\"salary\" value={details.salary} readOnly />\r\n        </Form.Group>\r\n        <Form.Checkbox label=\"is Admin\" checked={details.isAdmin} />\r\n      </Form>\r\n    </Segment>\r\n  );\r\n};\r\nexport default PreviewEmployeeInfo;\r\n","import { useState } from \"react\";\r\nimport { REQUEST } from \"../../../actions/http\";\r\nimport { Segment, Form, Image } from \"semantic-ui-react\";\r\n\r\nconst toBase64 = (file) =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n\r\nconst ImageUploaderComponent = ({ details, setDetails }) => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const ImageUploader = async () => {\r\n    if (!selectedFile) return;\r\n    const file = await toBase64(selectedFile);\r\n    const imgUpload = await REQUEST({\r\n      path: \"/api/fileUpload\",\r\n      method: \"POST\",\r\n      data: {\r\n        file,\r\n      },\r\n      setLoading,\r\n    });\r\n    console.log(imgUpload);\r\n    setDetails({ ...details, img: imgUpload });\r\n  };\r\n\r\n  return (\r\n    <Segment attached=\"bottom\" inverted className=\"form-container\">\r\n      <Image src={details.img || \"\"} size=\"medium\" centered />\r\n      <Form inverted className=\"form-container\" onSubmit={ImageUploader}>\r\n        <Form.Input\r\n          type=\"file\"\r\n          label=\"Image of Employee\"\r\n          name=\"img\"\r\n          onChange={(e, { value }) => {\r\n            setSelectedFile(e.target.files[0]);\r\n            console.log(e.target.files[0]);\r\n          }}\r\n        />\r\n        <Form.Button type=\"submit\" loading={loading}>\r\n          upload Image\r\n        </Form.Button>\r\n      </Form>\r\n    </Segment>\r\n  );\r\n};\r\nexport default ImageUploaderComponent;\r\n","import { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Segment,\r\n  Container,\r\n  Message,\r\n  Menu,\r\n} from \"semantic-ui-react\";\r\nimport {\r\n  genderOptions,\r\n  jobOptions,\r\n  positionOptions,\r\n  branchOptions,\r\n} from \"./options\";\r\nimport PreviewEmployeeInfo from \"../PreviewEmployeeInfo\";\r\nimport { REQUEST } from \"../../../actions/http\";\r\nimport \"./style.css\";\r\nimport ImageUploaderComponent from \"../../atoms/imageUploader\";\r\n\r\nconst AddEmployeeForm = () => {\r\n  // state\r\n  const [details, setDetails] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    gender: \"\",\r\n    department: \"\",\r\n    position: \"\",\r\n    branch: \"\",\r\n    salary: \"\",\r\n    isAdmin: false,\r\n    dob: \"\",\r\n    img: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState({\r\n    show: false,\r\n    type: null,\r\n    header: null,\r\n    content: false,\r\n  });\r\n  const [activeMenu, setActiveMenu] = useState(\"form\");\r\n\r\n  // functions\r\n\r\n  const changeHandler = (e, { name, value }) => {\r\n    e.preventDefault();\r\n    setDetails({\r\n      ...details,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const requestData = await REQUEST({\r\n        path: \"/api/employee\",\r\n        method: \"POST\",\r\n        data: details,\r\n        setLoading,\r\n      });\r\n      console.log(requestData);\r\n      setMessage({\r\n        show: true,\r\n        type: \"success\",\r\n        header: \"Success\",\r\n        content: `A new Employee has been created with ID : ${requestData}`,\r\n      });\r\n    } catch (e) {\r\n      console.log(e.message);\r\n      setMessage({\r\n        show: true,\r\n        type: \"error\",\r\n        header: \"Error\",\r\n        content: e.message,\r\n      });\r\n    }\r\n  };\r\n  const handleMenuChange = (e, { name }) => setActiveMenu(name);\r\n  return (\r\n    <Container>\r\n      <Menu attached=\"top\" tabular inverted>\r\n        <Menu.Item\r\n          name=\"form\"\r\n          active={activeMenu === \"form\"}\r\n          onClick={handleMenuChange}\r\n        />\r\n\r\n        <Menu.Item\r\n          name=\"image\"\r\n          active={activeMenu === \"image\"}\r\n          onClick={handleMenuChange}\r\n        />\r\n\r\n        <Menu.Item\r\n          name=\"preview\"\r\n          active={activeMenu === \"preview\"}\r\n          onClick={handleMenuChange}\r\n        />\r\n      </Menu>\r\n      {activeMenu === \"image\" ? (\r\n        <ImageUploaderComponent details={details} setDetails={setDetails} />\r\n      ) : activeMenu === \"form\" ? (\r\n        <Segment attached=\"bottom\" inverted className=\"form-container\">\r\n          <h1>Add A New Employee</h1>\r\n          <Form\r\n            inverted\r\n            onSubmit={submitHandler}\r\n            loading={loading}\r\n            className=\"form-container\"\r\n          >\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Input\r\n                fluid\r\n                label=\"First name\"\r\n                placeholder=\"First name\"\r\n                name=\"firstName\"\r\n                onChange={changeHandler}\r\n                value={details.firstName}\r\n              />\r\n              <Form.Input\r\n                fluid\r\n                label=\"Last name\"\r\n                placeholder=\"Last name\"\r\n                name=\"lastName\"\r\n                onChange={changeHandler}\r\n                value={details.lastName}\r\n              />\r\n              <Form.Select\r\n                fluid\r\n                label=\"Gender\"\r\n                options={genderOptions}\r\n                placeholder=\"Gender\"\r\n                name=\"gender\"\r\n                onChange={changeHandler}\r\n                value={details.gender}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Select\r\n                fluid\r\n                label=\"Department\"\r\n                options={jobOptions}\r\n                placeholder=\"Department\"\r\n                name=\"department\"\r\n                value={details.department}\r\n                onChange={changeHandler}\r\n              />\r\n              <Form.Select\r\n                fluid\r\n                label=\"Job Position\"\r\n                options={positionOptions}\r\n                placeholder=\"Job Position\"\r\n                name=\"position\"\r\n                value={details.position}\r\n                onChange={changeHandler}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Input\r\n                fluid\r\n                label=\"email\"\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                onChange={changeHandler}\r\n                value={details.email}\r\n              />\r\n              <Form.Field>\r\n                <label>Salary</label>\r\n                <Input\r\n                  fluid\r\n                  label=\"salary\"\r\n                  placeholder=\"Amount\"\r\n                  name=\"salary\"\r\n                  value={details.salary}\r\n                  onChange={changeHandler}\r\n                >\r\n                  <Label basic>$</Label>\r\n                  <input />\r\n                </Input>\r\n              </Form.Field>\r\n            </Form.Group>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Input\r\n                type=\"date\"\r\n                label=\"date of birth\"\r\n                placeholder=\"DOB\"\r\n                value={details.dob}\r\n                name=\"dob\"\r\n                onChange={changeHandler}\r\n              />\r\n              <Form.Select\r\n                fluid\r\n                label=\"Branch\"\r\n                options={branchOptions}\r\n                placeholder=\"Branch\"\r\n                name=\"branch\"\r\n                value={details.branch}\r\n                onChange={changeHandler}\r\n              />\r\n            </Form.Group>\r\n            <Form.Checkbox\r\n              label=\"is Admin\"\r\n              name=\"isAdmin\"\r\n              checked={details.isAdmin}\r\n              onChange={(e, { name, checked }) =>\r\n                setDetails({\r\n                  ...details,\r\n                  [name]: checked,\r\n                })\r\n              }\r\n            />\r\n            <Form.Button>Submit</Form.Button>\r\n          </Form>\r\n          {message.show && (\r\n            <Message\r\n              error={message.type === \"error\"}\r\n              success={message.type === \"success\"}\r\n              header={message.header}\r\n              content={message.content}\r\n            />\r\n          )}\r\n        </Segment>\r\n      ) : (\r\n        <PreviewEmployeeInfo details={details} />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddEmployeeForm;\r\n","import RichTextEditor from \"react-rte\";\r\nimport { Container } from \"semantic-ui-react\";\r\n\r\nconst MyTextEditor = ({ details, setDetails, setHtml }) => {\r\n  // const [value, setValue] = useState(RichTextEditor.createEmptyValue())\r\n  const onChange = (value) => {\r\n    setDetails({ ...details, value });\r\n    setHtml(value.toString(\"html\"));\r\n    // console.log(value.toString('html'))\r\n  };\r\n  return (\r\n    <Container>\r\n      <RichTextEditor value={details.value} onChange={onChange} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MyTextEditor;\r\n","import { useState } from \"react\";\r\nimport {\r\n  Segment,\r\n  Menu,\r\n  Header,\r\n  Container,\r\n  Image,\r\n  Button,\r\n} from \"semantic-ui-react\";\r\nimport ShowMessage from '../../atoms/showMessage';\r\nimport MyTextEditor from \"../../atoms/TextEditor\";\r\nimport RichTextEditor from \"react-rte\";\r\nimport ImageUploaderComponent from \"../../atoms/imageUploader\";\r\nimport { REQUEST } from \"../../../actions/http\";\r\nconst PreviewPost = ({ html, img }) => {\r\n  return (\r\n    <div>\r\n      <Image src={img} size=\"medium\" />\r\n      <div dangerouslySetInnerHTML={{ __html: html }}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CreatePostMenu = () => {\r\n  const [activeItem, setActiveItem] = useState(\"content\");\r\n  const handleItemClick = (e, { name }) => setActiveItem(name);\r\n  const [details, setDetails] = useState({\r\n    value: RichTextEditor.createEmptyValue(),\r\n    img: \"\",\r\n  });\r\n  const [html, setHtml] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [success, setSuccess] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      console.log(html);\r\n      const response = await REQUEST({\r\n        path: \"/api/post\",\r\n        method: \"POST\",\r\n        data: {\r\n          img: details.img,\r\n          html,\r\n        },\r\n        setLoading,\r\n      });\r\n      setSuccess(response);\r\n      setError(null);\r\n    } catch (e) {\r\n      console.log(e.message);\r\n      setSuccess(null);\r\n      setError(e.message);\r\n    } finally {\r\n      return;\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <div className=\"user-request-menu\">\r\n        <Header attached=\"top\" as=\"h3\" textAlign=\"left\" block>\r\n          Create a post for discussion\r\n        </Header>\r\n        <Menu attached=\"top\" tabular>\r\n          <Menu.Item\r\n            name=\"content\"\r\n            active={activeItem === \"content\"}\r\n            onClick={handleItemClick}\r\n          />\r\n          <Menu.Item\r\n            name=\"image\"\r\n            active={activeItem === \"image\"}\r\n            onClick={handleItemClick}\r\n          />\r\n          <Menu.Item\r\n            name=\"preview\"\r\n            active={activeItem === \"preview\"}\r\n            onClick={handleItemClick}\r\n          />\r\n        </Menu>\r\n        <Segment attached=\"bottom\">\r\n          {activeItem === \"content\" ? (\r\n            <MyTextEditor\r\n              setHtml={setHtml}\r\n              details={details}\r\n              setDetails={setDetails}\r\n            />\r\n          ) : activeItem === \"image\" ? (\r\n            <ImageUploaderComponent details={details} setDetails={setDetails} />\r\n          ) : (\r\n            <PreviewPost html={html} img={details.img} />\r\n          )}\r\n        </Segment>\r\n        <Button loading={loading} onClick={submitHandler}>\r\n          Submit\r\n        </Button>\r\n       <ShowMessage error={error} success={success} />\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreatePostMenu;\r\n","import RequestContainer from \"../molecules/RequestContainer\";\r\nimport {Container} from 'semantic-ui-react';\r\nimport AddEmployeeForm from \"../molecules/AddEmployeeForm\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport CreatePostMenu from \"../molecules/CreatePostMenu\";\r\nimport LoadingPage from \"./loadingPage\";\r\nimport ErrorPage from \"./errorPage\";\r\nimport RefreshIcon from \"../atoms/refreshIcon\";\r\n\r\n\r\nconst AdminPage = () => {\r\n  const REQUESTS_QUERY = gql`\r\n    query AdminDashboard {\r\n      requests {\r\n        _id\r\n        employee {\r\n          _id\r\n          name\r\n          img\r\n        }\r\n        status\r\n        data {\r\n          amount\r\n          message\r\n          dates {\r\n            startDate\r\n            endDate\r\n          }\r\n        }\r\n        type\r\n        resolved_by {\r\n          name\r\n          img\r\n        }\r\n      }\r\n    }\r\n  `;\r\n  const { loading, error, data, refetch } = useQuery(REQUESTS_QUERY);\r\n  if (loading) {\r\n    return (\r\n      <LoadingPage />\r\n    );\r\n  }\r\n  if (error) {\r\n    return (\r\n     <ErrorPage error={error} />\r\n    );\r\n  }\r\n  const { requests } = data;\r\n  // console.log(requests)\r\n  return (\r\n    <Container>\r\n      <RefreshIcon refetch={refetch} />\r\n      <div style={{ height: \"20px\" }}></div>\r\n      <RequestContainer requests={requests} />\r\n      <div style={{ height: \"50px\" }}></div>\r\n      <CreatePostMenu />\r\n      <div style={{ height: \"50px\" }}></div>\r\n      <AddEmployeeForm />\r\n      <div style={{ height: \"50px\" }}></div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","import { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Segment, Feed, Image, Icon } from \"semantic-ui-react\";\r\nimport ShowMessage from '../showMessage'\r\nimport { UserContext } from \"../../../context/UserContextProvider\";\r\nimport {REQUEST} from '../../../actions/http'\r\n\r\nconst Post = ({ post }) => {\r\n  const htmlDiv = useRef();\r\n  const {state} = useContext(UserContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  useEffect(() => {\r\n    htmlDiv.current.innerHTML = post.html;\r\n  }, [post]);\r\n\r\n  const deletePost = async (e) =>{\r\n    e.preventDefault();\r\n    console.log(\"delete post\");\r\n    try{\r\n      const response = await REQUEST({\r\n        path:'/api/post',\r\n        method:\"DELETE\",\r\n        data:{\r\n          _id:post._id\r\n        },\r\n        setLoading\r\n      })\r\n      setSuccess(response)\r\n      setError(null)\r\n    }catch(e){\r\n      console.log(e.message);\r\n      setError(e.message)\r\n      setSuccess(null)\r\n    }\r\n  }\r\n  return (\r\n    <Segment>\r\n      <Feed.Event>\r\n        <Feed.Content>\r\n          <Feed.Summary>\r\n            <Image avatar src={post.created_by.img || \"\"} />\r\n            <strong>{post.created_by.name}</strong> posted\r\n            <br />\r\n            <br />\r\n          </Feed.Summary>\r\n          <Image size=\"large\" src={post.img} />\r\n          <br />\r\n          <div ref={htmlDiv} style={{ padding: \"10px\" }}></div>\r\n        </Feed.Content>\r\n      </Feed.Event>\r\n      {\r\n        state?.user?.isAdmin ? \r\n        <Icon name=\"trash\" loading={loading} onClick ={deletePost} color=\"grey\"/>\r\n        : null\r\n      }\r\n      <ShowMessage error={error} success={success} />\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import Post from \"../../atoms/post\";\r\n\r\nconst PostContainer = ({ posts }) => {\r\n  return (\r\n    <>\r\n      {posts.map((post) => {\r\n        return <Post key={post._id} post={post} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostContainer;\r\n","import { Container} from \"semantic-ui-react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport PostContainer from \"../molecules/PostsContainer\";\r\nimport LoadingPage from \"./loadingPage\";\r\nimport ErrorPage from \"./errorPage\";\r\nimport RefreshIcon from \"../atoms/refreshIcon\";\r\n\r\nconst DiscussionPage = () => {\r\n  const POSTS_QUERY = gql`\r\n    {\r\n      posts {\r\n        _id\r\n        html\r\n        img\r\n        created_by {\r\n          name\r\n          img\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  const { loading, error, data, refetch } = useQuery(POSTS_QUERY);\r\n  if (loading) {\r\n    return <LoadingPage />\r\n  }\r\n  if (error) {\r\n    return <ErrorPage error={error} />\r\n  }\r\n  // data\r\n  return (\r\n    <Container style={{ padding: \"10px\", margin: \"auto\", overflowX: \"hidden\" }}>\r\n      <RefreshIcon refetch={refetch} />\r\n      <PostContainer posts={data.posts} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DiscussionPage;\r\n","import { useState, useEffect } from \"react\";\r\nimport LoadingPage from './loadingPage'\r\nimport ErrorPage from './errorPage'\r\nimport {\r\n  Container,\r\n  Input,\r\n  Segment,\r\n  Card,\r\n  Button,\r\n  Message,\r\n  Select,\r\n  Header,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport UserInfoCard from \"../molecules/UserInfoCard\";\r\nimport Fuse from \"fuse.js\";\r\nimport RefreshIcon from \"../atoms/refreshIcon\";\r\nconst options = [\r\n  { key: \"department\", text: \"department\", value: \"department\" },\r\n  { key: \"branch\", text: \"branch\", value: \"branch\" },\r\n  { key: \"position\", text: \"position\", value: \"position\" },\r\n  { key: \"name\", text: \"name\", value: \"name\" },\r\n];\r\nconst GET_ALL_EMPLOYEES = gql`\r\n  {\r\n    employees {\r\n      _id\r\n      name\r\n      email\r\n      img\r\n      branch\r\n      department\r\n      position\r\n      dob\r\n      salary\r\n      isAdmin\r\n    }\r\n  }\r\n`;\r\nconst SearchPage = () => {\r\n  const { loading, error, data, refetch } = useQuery(GET_ALL_EMPLOYEES);\r\n  const [sortBy, setSortBy] = useState(\"department\");\r\n  const [value, setValue] = useState(\"\");\r\n  const [employees, setEmployees] = useState(data?.employees || []);\r\n  const [allEmployee, setAllEmployee] = useState(data?.employees || []);\r\n  useEffect(() => {\r\n    setEmployees(data?.employees || []);\r\n    setAllEmployee(data?.employees || []);\r\n  }, [data]);\r\n\r\n  const searchEmployee = (e) => {\r\n    e.preventDefault();\r\n    const options = {\r\n      includeScore: true,\r\n      keys: [sortBy],\r\n    };\r\n    const fuse = new Fuse(allEmployee || [], options);\r\n    const result = fuse.search(value);\r\n    const searchedResult = result.map((r) => r.item);\r\n    console.log(searchedResult);\r\n    setEmployees(searchedResult);\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingPage />\r\n  }\r\n  if (error) {\r\n    return <ErrorPage error={error} />\r\n  }\r\n\r\n  return (\r\n    <Container style={{ overflowX: \"hidden\" }}>\r\n      <RefreshIcon refetch={refetch} />\r\n      <Header as=\"h4\" block>\r\n        Search Employee by {sortBy}\r\n      </Header>\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        action\r\n        value={value}\r\n        onChange={(e, { value }) => setValue(value)}\r\n      >\r\n        <input />\r\n        <Select\r\n          compact\r\n          options={options}\r\n          value={sortBy}\r\n          onChange={(e, { value }) => {\r\n            setSortBy(value);\r\n          }}\r\n        />\r\n        <Button type=\"submit\" onClick={searchEmployee}>\r\n          <Icon name=\"search\" />\r\n        </Button>\r\n      </Input>\r\n\r\n      <Segment>\r\n        <Card.Group centered>\r\n          {employees.length === 0 ? (\r\n            <Message>No results found!</Message>\r\n          ) : (\r\n            employees.map((employee) => {\r\n              return (\r\n                <UserInfoCard\r\n                  key={employee._id}\r\n                  _id={employee._id}\r\n                  branch={employee.branch}\r\n                  department={employee.department}\r\n                  position={employee.position}\r\n                  firstName={employee.name}\r\n                  img={employee.img}\r\n                  fluid={false}\r\n                  dob={employee.dob}\r\n                  email={employee.email}\r\n                  salary={employee.salary}\r\n                  isAdmin={employee.isAdmin}\r\n                  showProfileButton={true}\r\n                />\r\n              );\r\n            })\r\n          )}\r\n        </Card.Group>\r\n      </Segment>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import './style.css'\r\n// import {Icon} from 'semantic-ui-react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n     <div>\r\n        <p><strong> Barangay Human Resources Management System</strong> </p>\r\n        \r\n        \r\n     </div>\r\n    </footer>\r\n  );\r\n}\r\n \r\nexport default Footer;","import { Container, Header, Segment, Card, Icon } from \"semantic-ui-react\";\r\nimport Footer from \"../templates/footer\";\r\n\r\nconst PolicyCard = ({ description, link, header }) => {\r\n  return (\r\n    <Card>\r\n      <Card.Content header={header} />\r\n      <Card.Content description={description} />\r\n      <Card.Content extra>\r\n        <Icon name=\"file alternate\" />\r\n        <a href={link} target=\"_blank\" rel=\"noreferrer\">\r\n          open document\r\n        </a>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst data = [\r\n  {\r\n    _id: 1,\r\n    header: \"Policy\",\r\n    description:\r\n      \"A file containing set of rules and regulations regarding working of company.\",\r\n    link: \"../../../assets/policy.pdf\",\r\n  },\r\n  {\r\n    _id: 2,\r\n    header: \"Holidays\",\r\n    description: \"A document containing the holidays of the year.\",\r\n    link: \"../../../assets/holidays.jpg\",\r\n  },\r\n  {\r\n    _id: 3,\r\n    header: \"Company logo\",\r\n    description:\r\n      \"A file containing company logo, cannot be used for commercial purposes without permission\",\r\n    link: \"../../../assets/logo.jpg\",\r\n  },\r\n];\r\nconst HomePage = () => {\r\n  return (\r\n    <>\r\n    <Container>\r\n      <div className=\"hero\">\r\n        <h3>BHRMS</h3>\r\n      </div>\r\n      <Segment>\r\n        <Header as=\"h3\" block>\r\n          Policies and Holidays\r\n        </Header>\r\n        <Card.Group>\r\n          {data.map((d) => {\r\n            return (\r\n              <PolicyCard\r\n                key={d._id}\r\n                header={d.header}\r\n                description={d.description}\r\n                link={d.link}\r\n              />\r\n            );\r\n          })}\r\n        </Card.Group>\r\n      </Segment>\r\n    </Container>\r\n    <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import {gql, useQuery} from '@apollo/client'\r\nimport AttendanceCalender from '../atoms/Attendance'\r\nimport UserInfoCard from '../molecules/UserInfoCard'\r\nimport {useHistory} from 'react-router-dom'\r\nimport LoadingPage from './loadingPage';\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\n\r\nconst AboutPage = (props) => {\r\n  const router = useHistory()\r\n  const _id = props.match.params.id;\r\n  const ABOUT_USER_QUERY = gql`\r\n    query Employee($_id: String!) {\r\n      employee(_id: $_id) {\r\n        _id\r\n        name\r\n        email\r\n        img\r\n        branch\r\n        department\r\n        position\r\n        dob\r\n        salary\r\n        isAdmin\r\n        absentDates {\r\n          date\r\n        }\r\n        presentDates {\r\n          date\r\n        }\r\n      }\r\n    }\r\n  `;\r\n  const {loading, error, data} = useQuery(ABOUT_USER_QUERY,{\r\n    variables:{_id}\r\n  })\r\n  if(loading) return <LoadingPage />\r\n  if(error || !data || !data.employee){\r\n    router.push('/search')  \r\n    return null;\r\n  }\r\n  console.log(data);\r\n  const {name, email, img, branch, department, position, dob, salary, isAdmin} = data?.employee || {};\r\n  var { absentDates, presentDates } = data.employee || {};\r\n  absentDates = absentDates.map((d) => new Date(d.date).toLocaleDateString());\r\n  presentDates = presentDates.map((d) =>\r\n    new Date(d.date).toLocaleDateString()\r\n  );\r\n  return (\r\n    <Container>\r\n      <Header as=\"h3\" block>{name}'s profile</Header>\r\n      <Segment textAlign=\"center\">\r\n        <UserInfoCard\r\n          fluid={true}\r\n          _id={_id}\r\n          branch={branch}\r\n          department={department}\r\n          dob={dob.split(\"T\")[0]}\r\n          email={email}\r\n          firstName={name}\r\n          img={img}\r\n          position={position}\r\n          salary={salary}\r\n          isAdmin = {isAdmin}\r\n          showDeleteButton={true}\r\n        />\r\n      </Segment>\r\n      <AttendanceCalender\r\n        absentDates={absentDates || []}\r\n        presentDates={presentDates || []}\r\n        showMarkAttendanceButton = {false}\r\n      />\r\n      <div style={{ height: \"50px\" }}></div>\r\n    </Container>\r\n  );\r\n}\r\n \r\nexport default AboutPage;","import { useState } from 'react';\r\nimport { Card, Icon ,Image } from 'semantic-ui-react'\r\nimport { REQUEST } from '../../../actions/http';\r\nimport {TodoItemStatus} from '../../../constants'\r\nimport './style.css';\r\n\r\nconst TodoListItemButton = ({onClick, name, loading, title}) => {\r\n  return  <div onClick={onClick}><Icon name={name} loading={loading} />{title}</div>\r\n}\r\n\r\nconst TodoListItem = ({_id, text, status, employee, refetch, showButtons}) => {\r\n  const [loading, setLoading] = useState(false)\r\n  const updateStatus = async (status) => {\r\n    try{\r\n      const response = await REQUEST({\r\n        path:'/api/kanban',\r\n        method:\"PATCH\",\r\n        data:{\r\n          _id,\r\n          status\r\n        },\r\n        setLoading\r\n      })\r\n      console.log(response)\r\n    }catch(e){\r\n      console.log(e.message)\r\n    }finally{\r\n      refetch && refetch()\r\n      return;\r\n    }\r\n  }\r\n  const deleteItem = async (e) => {\r\n    e.preventDefault()\r\n    try{\r\n      const response = await REQUEST({\r\n        path:'/api/kanban',\r\n        method:\"DELETE\",\r\n        data:{\r\n          _id\r\n        },\r\n        setLoading\r\n      })\r\n      console.log(response)\r\n    }catch(e){\r\n      console.log(e.message)\r\n    }finally{\r\n      refetch && refetch()\r\n      return;\r\n    }\r\n  }\r\n  return (\r\n  <Card>\r\n      <Card.Content>\r\n      <div className=\"employee-kanban\">\r\n        <Image avatar src={employee.img} />\r\n        <h5>{employee.name}</h5>\r\n      </div>\r\n      </Card.Content>\r\n      <Card.Content description={text} />\r\n      <Card.Content extra className=\"buttons\">\r\n      \r\n      {\r\n        showButtons ? \r\n        status === TodoItemStatus.DONE ? \r\n        <>\r\n          <TodoListItemButton \r\n            onClick={() => {updateStatus(TodoItemStatus.TODO)}}\r\n            name=\"hourglass start\"\r\n            loading = {loading}\r\n            title = \"Todo\"\r\n          />\r\n          <TodoListItemButton \r\n          onClick={() => {updateStatus(TodoItemStatus.DOING)}}\r\n          name=\"hourglass half\"\r\n          loading = {loading}\r\n          title = \"Doing\"\r\n        />\r\n        </> : \r\n        status === TodoItemStatus.DOING ? \r\n        <>\r\n          <TodoListItemButton \r\n            onClick={() => {updateStatus(TodoItemStatus.TODO)}}\r\n            name=\"hourglass start\"\r\n            loading = {loading}\r\n            title = \"Todo\"\r\n          />\r\n          <TodoListItemButton \r\n            onClick={() => {updateStatus(TodoItemStatus.DONE)}}\r\n            name=\"hourglass end\"\r\n            loading = {loading}\r\n            title = \"Done\"\r\n          />\r\n        </> :\r\n        <>\r\n          <TodoListItemButton \r\n            onClick={() => {updateStatus(TodoItemStatus.DOING)}}\r\n            name=\"hourglass half\"\r\n            loading = {loading}\r\n            title = \"Doing\"\r\n          />\r\n          <TodoListItemButton \r\n            onClick={() => {updateStatus(TodoItemStatus.DONE)}}\r\n            name=\"hourglass end\"\r\n            loading = {loading}\r\n            title = \"Done\"\r\n          />\r\n        </> : null\r\n      }\r\n        { showButtons && <TodoListItemButton \r\n          onClick={deleteItem}\r\n          name=\"trash\"\r\n          loading = {loading}\r\n          title = {\"Delete\"}\r\n        />}\r\n      </Card.Content>\r\n  </Card>\r\n  );\r\n}\r\n\r\nexport default TodoListItem;\r\n","import {Segment, Icon, Card} from 'semantic-ui-react'\r\nimport TodoListItem from '../../atoms/todoListItem'\r\n\r\nconst ListContainer = ({listItems, heading, icon, refetch, showButtons}) => {\r\n  return (\r\n    <Segment >\r\n        <h4>{heading} <Icon name={icon} /></h4>\r\n        <Card.Group>\r\n        {\r\n          listItems.map(({_id, text, status, employee}) =>{\r\n            return  <TodoListItem \r\n                      key = {_id}\r\n                      _id={_id}\r\n                      text={text}\r\n                      status={status}\r\n                      employee={employee}\r\n                      refetch = {refetch}\r\n                      showButtons = {showButtons}\r\n                   />\r\n          })\r\n        }\r\n          \r\n        </Card.Group>\r\n    </Segment>\r\n  );\r\n}\r\n \r\nexport default ListContainer;","import { useState } from 'react'\r\nimport { Button, Segment, Form } from 'semantic-ui-react'\r\nimport { REQUEST } from '../../../actions/http'\r\nimport {TodoItemStatus} from '../../../constants'\r\nimport ShowMessage from '../showMessage'\r\n\r\nconst ListItemForm = ({section, refetch}) => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const [success, setSuccess] = useState(null)\r\n  const [text, setText] = useState('')\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault()\r\n    try{\r\n      const response = await REQUEST({\r\n        path:'/api/kanban',\r\n        method:\"POST\",\r\n        data:{\r\n          text,\r\n          status:TodoItemStatus.TODO,\r\n          section\r\n        },\r\n        setLoading\r\n      })\r\n      setSuccess(response)\r\n      setError(null)\r\n    }catch(e){\r\n      console.log(e.message)\r\n      setError(e.message)\r\n      setSuccess(null)\r\n    }finally{\r\n      refetch();\r\n      return;\r\n    }\r\n  }\r\n  return (\r\n    <Segment>\r\n      <Form>\r\n        <Form.Field>\r\n          <label>Text</label>\r\n          <input placeholder={`Text of List Item for ${section}...`} value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n        </Form.Field>\r\n        <Button type='submit' loading={loading} onClick={submitHandler}>Submit</Button>\r\n      </Form>\r\n      <ShowMessage error={error} success={success} />\r\n    </Segment>\r\n  );\r\n}\r\n \r\nexport default ListItemForm;","import {Header, Container} from 'semantic-ui-react'\r\nimport {useContext} from 'react'\r\nimport RefreshIcon from '../../atoms/refreshIcon'\r\nimport {gql, useQuery} from '@apollo/client'\r\nimport LoadingPage from '../../pages/loadingPage'\r\nimport ErrorPage from '../../pages/errorPage'\r\nimport ListContainer from '../ListContainer'\r\nimport {TodoItemStatus} from '../../../constants'\r\nimport ListItemForm from '../../atoms/listItemForm'\r\nimport { UserContext } from '../../../context/UserContextProvider'\r\n\r\nconst KanbanBoard = ({section, showForm=true, showButtons = true}) => {\r\n  // gql request to todos of the department\r\n  const {state} = useContext(UserContext)\r\n  const KANBAN_QUERY = gql`\r\n    query KanbanBoard($section:String!){\r\n      kanbanItems(section : $section){\r\n        _id\r\n        status\r\n        text\r\n        section\r\n        employee{\r\n          name\r\n          img\r\n        }\r\n      }\r\n    }\r\n  `;\r\n  const {loading, error, data, refetch} = useQuery(KANBAN_QUERY, {\r\n    variables:{\r\n      section\r\n    }\r\n  })\r\n  if(loading) return <LoadingPage />\r\n  if(error) return <ErrorPage />\r\n  if(data){\r\n    // console.log(data);\r\n    const {kanbanItems} = data;\r\n    var TodoItems = kanbanItems.filter((item) => item.status === TodoItemStatus.TODO)\r\n    var DoingItems = kanbanItems.filter((item) => item.status === TodoItemStatus.DOING)\r\n    var DoneItems = kanbanItems.filter((item) => item.status === TodoItemStatus.DONE)\r\n  }\r\n  return (\r\n    <Container>\r\n        {showButtons && <RefreshIcon refetch={refetch} />}\r\n        {showForm ? <ListItemForm section = {state?.user?.department} refetch={refetch} /> : null}\r\n        <Header as=\"h3\" content={section} block />\r\n        <ListContainer \r\n            listItems = {TodoItems}\r\n            heading={\"Todo\"}\r\n            icon = {\"hourglass start\"}\r\n            refetch = {refetch}\r\n            showButtons = {showButtons}\r\n        />\r\n        <ListContainer \r\n            listItems = {DoingItems}\r\n            heading={\"Doing\"}\r\n            icon = {\"hourglass half\"}\r\n            refetch = {refetch}\r\n            showButtons = {showButtons}\r\n        />\r\n        <ListContainer \r\n            listItems = {DoneItems}\r\n            heading={\"Done\"}\r\n            icon = {\"hourglass end\"}\r\n            refetch = {refetch}\r\n            showButtons = {showButtons}\r\n        />\r\n    </Container>\r\n  )\r\n}\r\n \r\nexport default KanbanBoard;","import KanbanBoard from \"../molecules/KanbanBoard\"\r\nimport { Container } from 'semantic-ui-react'\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"../../context/UserContextProvider\";\r\n\r\nconst KanbanPage = () => {\r\n  const {state} = useContext(UserContext)\r\n\r\n  return (\r\n    <Container>\r\n      <KanbanBoard\r\n        section={state?.user?.department}\r\n      />\r\n      <div style={{height:\"50px\"}}></div>\r\n      {\r\n        state?.user?.isAdmin ? \r\n        <>\r\n          <KanbanBoard\r\n            section={\"Sales Department\"}\r\n            showForm = {false}\r\n            showButtons = {false}\r\n          />\r\n          <div style={{height:\"50px\"}}></div>\r\n          <KanbanBoard\r\n            section={\"Finance Department\"}\r\n            showForm = {false}\r\n            showButtons = {false}\r\n\r\n          />\r\n        </> : null\r\n      } \r\n      \r\n      \r\n    </Container>\r\n  );\r\n}\r\n \r\nexport default KanbanPage;","import { Link } from 'react-router-dom'\r\nimport {Dimmer} from 'semantic-ui-react'\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <Dimmer active>\r\n      <p>404 Page not Found!</p>\r\n      <p ><Link style={{color:\"yellow\"}} to=\"/\">Click here to go to HomePage</Link></p>\r\n    </Dimmer>\r\n  );\r\n}\r\n \r\nexport default NotFoundPage;","import { Switch, Route } from \"react-router-dom\";\r\nimport LoginPage from \"./components/pages/loginPage\";\r\nimport ProtectedRoute from \"./components/atoms/ProtectedRoute\";\r\nimport AdminRoute from \"./components/atoms/adminRoute\";\r\nimport DashboardPage from \"./components/pages/dashboard\";\r\nimport AdminPage from \"./components/pages/adminPage\";\r\nimport DiscussionPage from \"./components/pages/discussion\";\r\nimport SearchPage from \"./components/pages/searchPage\";\r\nimport HomePage from \"./components/pages/homePage\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport AboutPage from \"./components/pages/aboutPage\";\r\nimport KanbanPage from \"./components/pages/kanbanPage\";\r\nimport NotFoundPage from \"./components/pages/404Page\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact children={HomePage} />\r\n      <Route path=\"/login\" children={<LoginPage />} />\r\n      <ProtectedRoute path=\"/dashboard\" component={DashboardPage} />\r\n      <ProtectedRoute path=\"/discussion\" component={DiscussionPage} />\r\n      <ProtectedRoute path=\"/search\" component={SearchPage} />\r\n      <AdminRoute path=\"/admin\" component={AdminPage} />\r\n      <ProtectedRoute path=\"/users/:id\" component={AboutPage} />\r\n      <ProtectedRoute path=\"/kanban\" component={KanbanPage} />\r\n      <Route component={NotFoundPage} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\nimport { URL } from \"../constants\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: `${URL.use}/graphql`,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nexport default client;\r\n","import axios from \"axios\";\r\nimport { ACTIONS } from \"../reducers/auth\";\r\n\r\nexport const logout = async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ACTIONS.LOADING });\r\n    await axios.post(\"/api/logout\");\r\n    dispatch({ type: ACTIONS.LOGOUT });\r\n    return true;\r\n  } catch (e) {\r\n    console.log(e);\r\n    dispatch({\r\n      type: ACTIONS.LOGOUT,\r\n      payload: { user: null, error: e.response.data },\r\n    });\r\n    return false;\r\n  }\r\n};\r\n","import \"./style.css\";\r\nimport { useContext, useRef, useState } from \"react\";\r\nimport { UserContext } from \"../../../context/UserContextProvider\";\r\nimport { logout } from \"../../../actions/logout\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Icon } from \"semantic-ui-react\";\r\n\r\nconst loggedInLinks = [\r\n  {\r\n    link:\"Discussion\",\r\n    icon:\"feed\"\r\n  },\r\n  {\r\n    link:\"Search\",\r\n    icon:\"search\"\r\n  },\r\n  {\r\n    link:\"Dashboard\",\r\n    icon:\"user outline\"\r\n  },\r\n  {\r\n    link:\"Kanban\",\r\n    icon:\"clipboard list\"\r\n  },\r\n]\r\n\r\nconst Navbar = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const [icon, setIcon] = useState(\"envelope\");\r\n  const mobileNav = useRef();\r\n  var navLinks = [{\r\n    link:\"Login\",\r\n    icon:\"user circle\"\r\n  }];\r\n  if (state.user) {\r\n    navLinks = loggedInLinks;\r\n    if (state.user.isAdmin) {\r\n      navLinks = [...loggedInLinks, {link:\"Admin\", icon:\"user plus\"}];\r\n    }\r\n  }\r\n  // const logoLink = state.user ? '/dashboard' : '/';\r\n  const logoLink = \"/\";\r\n  const clickHandler = () => logout(dispatch);\r\n  const hideLinks = () => {\r\n    mobileNav.current.classList.toggle(\"hidden\");\r\n    if (icon === \"envelope\") setIcon(\"envelope open outline\");\r\n    else setIcon(\"envelope\");\r\n  };\r\n  return (\r\n    <nav>\r\n      <Link to={logoLink}>\r\n        <h1 className=\"logo\">The Office</h1>\r\n      </Link>\r\n      {navLinks.length > 1 ? (\r\n        <div>\r\n          <ul className=\"nav-links\">\r\n            {navLinks.map(({link, icon}, idx) => {\r\n              return (\r\n                <Link className=\"link\" to={`/${link.toLowerCase()}`} key={idx}>\r\n                  <li>{link} <Icon name={icon} /></li>\r\n                </Link>\r\n              );\r\n            })}\r\n            {state.user ? <li onClick={clickHandler}>Logout</li> : null}\r\n          </ul>\r\n\r\n          <div className=\"nav-burger\" onClick={hideLinks}>\r\n            <Icon name={icon} />\r\n            <ul className=\"nav-burger-links hidden\" ref={mobileNav}>\r\n              {navLinks.map(({link, icon}, idx) => {\r\n                return (\r\n                  <Link\r\n                    className=\"link\"\r\n                    to={`/${link.toLowerCase()}`}\r\n                    key={idx}\r\n                  >\r\n                    <li>{link} <Icon name={icon} /></li> \r\n                  </Link>\r\n                );\r\n              })}\r\n              {state.user ? (\r\n                <li className=\"link\" onClick={clickHandler}>\r\n                  Logout\r\n                </li>\r\n              ) : null}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        navLinks.map(({link, icon}, idx) => {\r\n          console.log(link);\r\n          return (\r\n            <Link\r\n              className=\"single-link\"\r\n              to={`/${link.toLowerCase()}`}\r\n              key={idx}\r\n            >\r\n              <li>{link} <Icon name={icon} /></li>\r\n            </Link>\r\n          );\r\n        })\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// root component\r\nimport App from \"./App\";\r\n// styling css files\r\nimport \"./style.css\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n// contexts\r\nimport UserContextProvider from \"./context/UserContextProvider\";\r\n// graphQL\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport client from \"./config/graphql\";\r\n// router\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n// templates\r\nimport Navbar from \"./components/templates/navbar\";\r\n\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <Router>\r\n      <UserContextProvider>\r\n        <Navbar />\r\n        <App />\r\n      </UserContextProvider>\r\n    </Router>\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}